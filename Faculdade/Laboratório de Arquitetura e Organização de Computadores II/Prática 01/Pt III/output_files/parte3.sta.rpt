TimeQuest Timing Analyzer report for parte3
Thu Feb 11 16:21:41 2021
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clock'
 12. Slow Model Setup: 'address[0]'
 13. Slow Model Hold: 'address[0]'
 14. Slow Model Hold: 'clock'
 15. Slow Model Minimum Pulse Width: 'clock'
 16. Slow Model Minimum Pulse Width: 'address[0]'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Propagation Delay
 22. Minimum Propagation Delay
 23. Fast Model Setup Summary
 24. Fast Model Hold Summary
 25. Fast Model Recovery Summary
 26. Fast Model Removal Summary
 27. Fast Model Minimum Pulse Width Summary
 28. Fast Model Setup: 'clock'
 29. Fast Model Setup: 'address[0]'
 30. Fast Model Hold: 'address[0]'
 31. Fast Model Hold: 'clock'
 32. Fast Model Minimum Pulse Width: 'clock'
 33. Fast Model Minimum Pulse Width: 'address[0]'
 34. Setup Times
 35. Hold Times
 36. Clock to Output Times
 37. Minimum Clock to Output Times
 38. Propagation Delay
 39. Minimum Propagation Delay
 40. Multicorner Timing Analysis Summary
 41. Setup Times
 42. Hold Times
 43. Clock to Output Times
 44. Minimum Clock to Output Times
 45. Progagation Delay
 46. Minimum Progagation Delay
 47. Setup Transfers
 48. Hold Transfers
 49. Report TCCS
 50. Report RSKM
 51. Unconstrained Paths
 52. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; parte3                                                            ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C35F672C6                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                 ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets        ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------+
; address[0] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { address[0] } ;
; clock      ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clock }      ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------+


+---------------------------------------------------------------------+
; Slow Model Fmax Summary                                             ;
+------------+-----------------+------------+-------------------------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note                    ;
+------------+-----------------+------------+-------------------------+
; 137.36 MHz ; 137.36 MHz      ; clock      ;                         ;
; 976.56 MHz ; 195.31 MHz      ; address[0] ; limit due to hold check ;
+------------+-----------------+------------+-------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+-------------------------------------+
; Slow Model Setup Summary            ;
+------------+--------+---------------+
; Clock      ; Slack  ; End Point TNS ;
+------------+--------+---------------+
; clock      ; -6.280 ; -830.559      ;
; address[0] ; -1.605 ; -4.684        ;
+------------+--------+---------------+


+-------------------------------------+
; Slow Model Hold Summary             ;
+------------+--------+---------------+
; Clock      ; Slack  ; End Point TNS ;
+------------+--------+---------------+
; address[0] ; -2.960 ; -8.147        ;
; clock      ; 0.391  ; 0.000         ;
+------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+------------+--------+------------------+
; Clock      ; Slack  ; End Point TNS    ;
+------------+--------+------------------+
; clock      ; -1.380 ; -154.380         ;
; address[0] ; -1.222 ; -12.438          ;
+------------+--------+------------------+


+----------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clock'                                                                                      ;
+--------+--------------+------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node    ; To Node          ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------+------------------+--------------+-------------+--------------+------------+------------+
; -6.280 ; cache2[1][5] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.515     ; 6.801      ;
; -6.280 ; cache2[1][5] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.515     ; 6.801      ;
; -6.280 ; cache2[1][5] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.515     ; 6.801      ;
; -6.213 ; cache2[1][3] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.515     ; 6.734      ;
; -6.213 ; cache2[1][3] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.515     ; 6.734      ;
; -6.213 ; cache2[1][3] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.515     ; 6.734      ;
; -6.061 ; cache2[1][5] ; cache3[3][7]     ; clock        ; clock       ; 1.000        ; -0.500     ; 6.597      ;
; -6.018 ; cache3[1][3] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.352     ; 6.702      ;
; -6.018 ; cache3[1][3] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.352     ; 6.702      ;
; -6.018 ; cache3[1][3] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.352     ; 6.702      ;
; -5.997 ; cache2[0][8] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.582     ; 6.451      ;
; -5.997 ; cache2[0][8] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.582     ; 6.451      ;
; -5.997 ; cache2[0][8] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.582     ; 6.451      ;
; -5.994 ; cache2[1][3] ; cache3[3][7]     ; clock        ; clock       ; 1.000        ; -0.500     ; 6.530      ;
; -5.977 ; cache3[0][8] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.359     ; 6.654      ;
; -5.977 ; cache3[0][8] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.359     ; 6.654      ;
; -5.977 ; cache3[0][8] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.359     ; 6.654      ;
; -5.974 ; cache2[1][5] ; cache0[0][0]     ; clock        ; clock       ; 1.000        ; -0.509     ; 6.501      ;
; -5.974 ; cache2[1][5] ; cache0[0][1]     ; clock        ; clock       ; 1.000        ; -0.509     ; 6.501      ;
; -5.974 ; cache2[1][5] ; cache0[0][2]     ; clock        ; clock       ; 1.000        ; -0.509     ; 6.501      ;
; -5.938 ; cache2[1][5] ; cache0[0][5]     ; clock        ; clock       ; 1.000        ; -0.249     ; 6.725      ;
; -5.938 ; cache2[1][5] ; cache0[0][4]     ; clock        ; clock       ; 1.000        ; -0.249     ; 6.725      ;
; -5.935 ; cache2[2][4] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.350     ; 6.621      ;
; -5.935 ; cache2[2][4] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.350     ; 6.621      ;
; -5.935 ; cache2[2][4] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.350     ; 6.621      ;
; -5.930 ; cache2[1][5] ; cache0[0][3]     ; clock        ; clock       ; 1.000        ; -0.224     ; 6.742      ;
; -5.907 ; cache2[1][3] ; cache0[0][0]     ; clock        ; clock       ; 1.000        ; -0.509     ; 6.434      ;
; -5.907 ; cache2[1][3] ; cache0[0][1]     ; clock        ; clock       ; 1.000        ; -0.509     ; 6.434      ;
; -5.907 ; cache2[1][3] ; cache0[0][2]     ; clock        ; clock       ; 1.000        ; -0.509     ; 6.434      ;
; -5.900 ; cache0[2][3] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.240     ; 6.696      ;
; -5.900 ; cache0[2][3] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.240     ; 6.696      ;
; -5.900 ; cache0[2][3] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.240     ; 6.696      ;
; -5.896 ; cache2[1][5] ; cache0[2][6]     ; clock        ; clock       ; 1.000        ; -0.502     ; 6.430      ;
; -5.873 ; cache1[1][3] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.142     ; 6.767      ;
; -5.873 ; cache1[1][3] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.142     ; 6.767      ;
; -5.873 ; cache1[1][3] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.142     ; 6.767      ;
; -5.871 ; cache2[1][3] ; cache0[0][5]     ; clock        ; clock       ; 1.000        ; -0.249     ; 6.658      ;
; -5.871 ; cache2[1][3] ; cache0[0][4]     ; clock        ; clock       ; 1.000        ; -0.249     ; 6.658      ;
; -5.870 ; cache2[1][5] ; cache0[2][8]     ; clock        ; clock       ; 1.000        ; -0.477     ; 6.429      ;
; -5.863 ; cache2[1][3] ; cache0[0][3]     ; clock        ; clock       ; 1.000        ; -0.224     ; 6.675      ;
; -5.862 ; cache2[1][5] ; cache1[1][0]     ; clock        ; clock       ; 1.000        ; -0.519     ; 6.379      ;
; -5.862 ; cache2[1][5] ; cache1[1][1]     ; clock        ; clock       ; 1.000        ; -0.519     ; 6.379      ;
; -5.862 ; cache2[1][5] ; cache1[1][2]     ; clock        ; clock       ; 1.000        ; -0.519     ; 6.379      ;
; -5.837 ; cache2[1][5] ; cache3[2][7]     ; clock        ; clock       ; 1.000        ; -0.500     ; 6.373      ;
; -5.830 ; cache2[1][3] ; out_data[6]~reg0 ; clock        ; clock       ; 1.000        ; -0.504     ; 6.362      ;
; -5.829 ; cache2[1][5] ; cache1[3][5]     ; clock        ; clock       ; 1.000        ; -0.135     ; 6.730      ;
; -5.829 ; cache2[1][5] ; cache1[3][4]     ; clock        ; clock       ; 1.000        ; -0.135     ; 6.730      ;
; -5.829 ; cache2[1][5] ; cache1[3][3]     ; clock        ; clock       ; 1.000        ; -0.135     ; 6.730      ;
; -5.829 ; cache2[1][3] ; cache0[2][6]     ; clock        ; clock       ; 1.000        ; -0.502     ; 6.363      ;
; -5.824 ; cache3[2][4] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.392     ; 6.468      ;
; -5.824 ; cache3[2][4] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.392     ; 6.468      ;
; -5.824 ; cache3[2][4] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.392     ; 6.468      ;
; -5.814 ; cache3[3][3] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.231     ; 6.619      ;
; -5.814 ; cache3[3][3] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.231     ; 6.619      ;
; -5.814 ; cache3[3][3] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.231     ; 6.619      ;
; -5.803 ; cache2[1][3] ; cache0[2][8]     ; clock        ; clock       ; 1.000        ; -0.477     ; 6.362      ;
; -5.799 ; cache3[1][3] ; cache3[3][7]     ; clock        ; clock       ; 1.000        ; -0.337     ; 6.498      ;
; -5.795 ; cache2[1][3] ; cache1[1][0]     ; clock        ; clock       ; 1.000        ; -0.519     ; 6.312      ;
; -5.795 ; cache2[1][3] ; cache1[1][1]     ; clock        ; clock       ; 1.000        ; -0.519     ; 6.312      ;
; -5.795 ; cache2[1][3] ; cache1[1][2]     ; clock        ; clock       ; 1.000        ; -0.519     ; 6.312      ;
; -5.780 ; cache2[1][5] ; cache0[1][0]     ; clock        ; clock       ; 1.000        ; -0.511     ; 6.305      ;
; -5.780 ; cache2[1][5] ; cache0[1][1]     ; clock        ; clock       ; 1.000        ; -0.511     ; 6.305      ;
; -5.780 ; cache2[1][5] ; cache0[1][2]     ; clock        ; clock       ; 1.000        ; -0.511     ; 6.305      ;
; -5.778 ; cache2[0][8] ; cache3[3][7]     ; clock        ; clock       ; 1.000        ; -0.567     ; 6.247      ;
; -5.770 ; cache2[1][3] ; cache3[2][7]     ; clock        ; clock       ; 1.000        ; -0.500     ; 6.306      ;
; -5.764 ; cache2[1][5] ; cache0[2][0]     ; clock        ; clock       ; 1.000        ; -0.514     ; 6.286      ;
; -5.764 ; cache2[1][5] ; cache0[2][1]     ; clock        ; clock       ; 1.000        ; -0.514     ; 6.286      ;
; -5.764 ; cache2[1][5] ; cache0[2][2]     ; clock        ; clock       ; 1.000        ; -0.514     ; 6.286      ;
; -5.762 ; cache2[1][3] ; cache1[3][5]     ; clock        ; clock       ; 1.000        ; -0.135     ; 6.663      ;
; -5.762 ; cache2[1][3] ; cache1[3][4]     ; clock        ; clock       ; 1.000        ; -0.135     ; 6.663      ;
; -5.762 ; cache2[1][3] ; cache1[3][3]     ; clock        ; clock       ; 1.000        ; -0.135     ; 6.663      ;
; -5.758 ; cache3[0][8] ; cache3[3][7]     ; clock        ; clock       ; 1.000        ; -0.344     ; 6.450      ;
; -5.757 ; cache3[0][5] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.595     ; 6.198      ;
; -5.757 ; cache3[0][5] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.595     ; 6.198      ;
; -5.757 ; cache3[0][5] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.595     ; 6.198      ;
; -5.753 ; cache0[2][4] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.240     ; 6.549      ;
; -5.753 ; cache0[2][4] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.240     ; 6.549      ;
; -5.753 ; cache0[2][4] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.240     ; 6.549      ;
; -5.742 ; cache2[1][5] ; cache1[2][6]     ; clock        ; clock       ; 1.000        ; -0.504     ; 6.274      ;
; -5.731 ; cache2[1][5] ; cache3[2][0]     ; clock        ; clock       ; 1.000        ; -0.502     ; 6.265      ;
; -5.731 ; cache2[1][5] ; cache3[2][1]     ; clock        ; clock       ; 1.000        ; -0.502     ; 6.265      ;
; -5.731 ; cache2[1][5] ; cache3[2][2]     ; clock        ; clock       ; 1.000        ; -0.502     ; 6.265      ;
; -5.724 ; cache2[1][5] ; cache1[2][0]     ; clock        ; clock       ; 1.000        ; -0.515     ; 6.245      ;
; -5.724 ; cache2[1][5] ; cache1[2][1]     ; clock        ; clock       ; 1.000        ; -0.515     ; 6.245      ;
; -5.724 ; cache2[1][5] ; cache1[2][2]     ; clock        ; clock       ; 1.000        ; -0.515     ; 6.245      ;
; -5.724 ; cache2[1][5] ; cache1[3][6]     ; clock        ; clock       ; 1.000        ; -0.507     ; 6.253      ;
; -5.723 ; cache1[2][4] ; cache1[3][0]     ; clock        ; clock       ; 1.000        ; -0.379     ; 6.380      ;
; -5.723 ; cache1[2][4] ; cache1[3][1]     ; clock        ; clock       ; 1.000        ; -0.379     ; 6.380      ;
; -5.723 ; cache1[2][4] ; cache1[3][2]     ; clock        ; clock       ; 1.000        ; -0.379     ; 6.380      ;
; -5.716 ; cache2[2][4] ; cache3[3][7]     ; clock        ; clock       ; 1.000        ; -0.335     ; 6.417      ;
; -5.713 ; cache2[1][3] ; cache0[1][0]     ; clock        ; clock       ; 1.000        ; -0.511     ; 6.238      ;
; -5.713 ; cache2[1][3] ; cache0[1][1]     ; clock        ; clock       ; 1.000        ; -0.511     ; 6.238      ;
; -5.713 ; cache2[1][3] ; cache0[1][2]     ; clock        ; clock       ; 1.000        ; -0.511     ; 6.238      ;
; -5.712 ; cache3[1][3] ; cache0[0][0]     ; clock        ; clock       ; 1.000        ; -0.346     ; 6.402      ;
; -5.712 ; cache3[1][3] ; cache0[0][1]     ; clock        ; clock       ; 1.000        ; -0.346     ; 6.402      ;
; -5.712 ; cache3[1][3] ; cache0[0][2]     ; clock        ; clock       ; 1.000        ; -0.346     ; 6.402      ;
; -5.709 ; cache2[1][5] ; cache2[3][1]     ; clock        ; clock       ; 1.000        ; -0.500     ; 6.245      ;
; -5.708 ; cache2[1][5] ; cache0[3][6]     ; clock        ; clock       ; 1.000        ; -0.503     ; 6.241      ;
; -5.700 ; cache2[1][5] ; cache2[0][1]     ; clock        ; clock       ; 1.000        ; -0.500     ; 6.236      ;
; -5.698 ; cache2[1][5] ; cache3[0][0]     ; clock        ; clock       ; 1.000        ; -0.514     ; 6.220      ;
+--------+--------------+------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'address[0]'                                                                                             ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node    ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+
; -1.605 ; cache3[0][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 3.821      ; 5.106      ;
; -1.551 ; cache2[1][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.073      ; 5.142      ;
; -1.548 ; cache2[1][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 3.901      ; 5.129      ;
; -1.528 ; cache2[1][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.069      ; 5.152      ;
; -1.522 ; cache3[0][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 3.993      ; 5.033      ;
; -1.497 ; cache3[0][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 3.989      ; 5.041      ;
; -1.484 ; cache2[1][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.073      ; 5.075      ;
; -1.481 ; cache2[1][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 3.901      ; 5.062      ;
; -1.461 ; cache3[1][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.064      ; 5.205      ;
; -1.461 ; cache2[1][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.069      ; 5.085      ;
; -1.383 ; cache3[0][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.543      ; 5.106      ;
; -1.378 ; cache3[1][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.236      ; 5.132      ;
; -1.353 ; cache3[1][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.232      ; 5.140      ;
; -1.329 ; cache2[1][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 3.795      ; 5.142      ;
; -1.326 ; cache2[1][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.623      ; 5.129      ;
; -1.306 ; cache2[1][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 3.791      ; 5.152      ;
; -1.304 ; cache3[0][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.057      ; 5.041      ;
; -1.300 ; cache3[0][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 3.715      ; 5.033      ;
; -1.290 ; cache3[0][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.229      ; 5.037      ;
; -1.275 ; cache3[0][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 3.711      ; 5.041      ;
; -1.268 ; cache2[0][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.006      ; 4.792      ;
; -1.267 ; cache3[0][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.225      ; 5.047      ;
; -1.267 ; cache3[2][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.024      ; 4.971      ;
; -1.265 ; cache2[0][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 3.834      ; 4.779      ;
; -1.262 ; cache2[1][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 3.795      ; 5.075      ;
; -1.259 ; cache2[1][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.623      ; 5.062      ;
; -1.257 ; cache3[3][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.185      ; 5.122      ;
; -1.247 ; cache1[1][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.274      ; 5.201      ;
; -1.245 ; cache2[0][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.002      ; 4.802      ;
; -1.239 ; cache3[1][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.786      ; 5.205      ;
; -1.239 ; cache2[1][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 3.791      ; 5.085      ;
; -1.206 ; cache2[2][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.238      ; 4.962      ;
; -1.203 ; cache2[2][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.066      ; 4.949      ;
; -1.184 ; cache3[2][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.196      ; 4.898      ;
; -1.183 ; cache2[2][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.234      ; 4.972      ;
; -1.174 ; cache3[3][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.357      ; 5.049      ;
; -1.164 ; cache1[1][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.446      ; 5.128      ;
; -1.159 ; cache3[2][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.192      ; 4.906      ;
; -1.156 ; cache3[1][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 3.958      ; 5.132      ;
; -1.149 ; cache3[3][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.353      ; 5.057      ;
; -1.139 ; cache1[1][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.442      ; 5.136      ;
; -1.131 ; cache3[1][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 3.954      ; 5.140      ;
; -1.120 ; cache3[3][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.185      ; 4.985      ;
; -1.097 ; cache1[2][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.037      ; 4.814      ;
; -1.082 ; cache3[0][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.779      ; 5.041      ;
; -1.078 ; cache3[1][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.025      ; 4.783      ;
; -1.073 ; cache3[0][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.057      ; 4.810      ;
; -1.068 ; cache3[0][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 3.951      ; 5.037      ;
; -1.055 ; cache1[0][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.189      ; 4.924      ;
; -1.046 ; cache2[0][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 3.728      ; 4.792      ;
; -1.045 ; cache3[0][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 3.947      ; 5.047      ;
; -1.045 ; cache3[2][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.746      ; 4.971      ;
; -1.043 ; cache2[0][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.556      ; 4.779      ;
; -1.037 ; cache3[3][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.357      ; 4.912      ;
; -1.035 ; cache3[3][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.907      ; 5.122      ;
; -1.025 ; cache1[1][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.996      ; 5.201      ;
; -1.023 ; cache2[0][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 3.724      ; 4.802      ;
; -1.014 ; cache1[2][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.209      ; 4.741      ;
; -1.012 ; cache3[3][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.353      ; 4.920      ;
; -1.009 ; cache1[1][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.274      ; 4.963      ;
; -0.995 ; cache3[1][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.197      ; 4.710      ;
; -0.990 ; cache3[0][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.229      ; 4.737      ;
; -0.989 ; cache1[2][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.205      ; 4.749      ;
; -0.984 ; cache2[2][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 3.960      ; 4.962      ;
; -0.981 ; cache2[2][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.788      ; 4.949      ;
; -0.979 ; cache1[3][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.036      ; 4.695      ;
; -0.972 ; cache1[0][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.361      ; 4.851      ;
; -0.970 ; cache3[1][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.193      ; 4.718      ;
; -0.965 ; cache3[0][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.225      ; 4.745      ;
; -0.962 ; cache3[2][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 3.918      ; 4.898      ;
; -0.961 ; cache2[2][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 3.956      ; 4.972      ;
; -0.958 ; cache1[3][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.036      ; 4.674      ;
; -0.952 ; cache3[3][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 4.079      ; 5.049      ;
; -0.947 ; cache1[0][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.357      ; 4.859      ;
; -0.942 ; cache1[1][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 4.168      ; 5.128      ;
; -0.937 ; cache3[2][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 3.914      ; 4.906      ;
; -0.927 ; cache3[3][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 4.075      ; 5.057      ;
; -0.926 ; cache1[1][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.446      ; 4.890      ;
; -0.926 ; cache1[1][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.189      ; 4.795      ;
; -0.924 ; cache2[1][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.073      ; 4.515      ;
; -0.921 ; cache3[0][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.057      ; 4.658      ;
; -0.921 ; cache2[1][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 3.901      ; 4.502      ;
; -0.917 ; cache1[1][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 4.164      ; 5.136      ;
; -0.910 ; cache2[3][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.006      ; 4.434      ;
; -0.907 ; cache2[3][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 3.834      ; 4.421      ;
; -0.901 ; cache2[1][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.069      ; 4.525      ;
; -0.901 ; cache1[1][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.442      ; 4.898      ;
; -0.898 ; cache3[3][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.907      ; 4.985      ;
; -0.896 ; cache1[3][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.208      ; 4.622      ;
; -0.887 ; cache2[3][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.002      ; 4.444      ;
; -0.875 ; cache1[2][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.759      ; 4.814      ;
; -0.875 ; cache1[3][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.208      ; 4.601      ;
; -0.874 ; cache3[3][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.185      ; 4.739      ;
; -0.871 ; cache1[3][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.204      ; 4.630      ;
; -0.860 ; cache1[0][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 4.264      ; 4.804      ;
; -0.856 ; cache3[1][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.747      ; 4.783      ;
; -0.851 ; cache3[0][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 3.779      ; 4.810      ;
; -0.850 ; cache1[3][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 4.204      ; 4.609      ;
; -0.843 ; cache1[1][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.361      ; 4.722      ;
; -0.838 ; cache3[0][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 4.229      ; 4.585      ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'address[0]'                                                                                              ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node    ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+
; -2.960 ; cache0[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.336      ; 2.376      ;
; -2.841 ; cache2[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.327      ; 2.486      ;
; -2.738 ; cache1[2][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.342      ; 2.604      ;
; -2.712 ; cache1[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.338      ; 2.626      ;
; -2.612 ; cache1[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.342      ; 2.730      ;
; -2.586 ; cache1[2][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.338      ; 2.752      ;
; -2.575 ; cache0[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.332      ; 2.757      ;
; -2.560 ; address[0]   ; choose_data:mux_boladao|s[1] ; address[0]   ; address[0]  ; 0.000        ; 7.992      ; 5.432      ;
; -2.475 ; cache1[2][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.170      ; 2.695      ;
; -2.468 ; address[0]   ; choose_data:mux_boladao|s[2] ; address[0]   ; address[0]  ; 0.000        ; 7.988      ; 5.520      ;
; -2.377 ; cache0[1][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.338      ; 2.961      ;
; -2.346 ; cache1[3][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.170      ; 2.824      ;
; -2.299 ; cache3[2][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.325      ; 3.026      ;
; -2.289 ; address[0]   ; choose_data:mux_boladao|s[0] ; address[0]   ; address[0]  ; 0.000        ; 7.820      ; 5.531      ;
; -2.264 ; cache0[1][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.334      ; 3.070      ;
; -2.257 ; cache2[1][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.335      ; 3.078      ;
; -2.074 ; cache0[0][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.336      ; 3.262      ;
; -2.060 ; address[0]   ; choose_data:mux_boladao|s[1] ; address[0]   ; address[0]  ; -0.500       ; 7.992      ; 5.432      ;
; -2.055 ; address[0]   ; choose_data:mux_boladao|s[1] ; address[0]   ; address[0]  ; 0.000        ; 7.487      ; 5.432      ;
; -1.997 ; cache3[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.321      ; 3.324      ;
; -1.968 ; address[0]   ; choose_data:mux_boladao|s[2] ; address[0]   ; address[0]  ; -0.500       ; 7.988      ; 5.520      ;
; -1.963 ; address[0]   ; choose_data:mux_boladao|s[2] ; address[0]   ; address[0]  ; 0.000        ; 7.483      ; 5.520      ;
; -1.960 ; cache2[0][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.327      ; 3.367      ;
; -1.955 ; cache0[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; -0.500       ; 4.831      ; 2.376      ;
; -1.952 ; cache2[1][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.331      ; 3.379      ;
; -1.949 ; cache3[2][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.329      ; 3.380      ;
; -1.923 ; cache0[1][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.166      ; 3.243      ;
; -1.836 ; cache2[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; -0.500       ; 4.822      ; 2.486      ;
; -1.789 ; address[0]   ; choose_data:mux_boladao|s[0] ; address[0]   ; address[0]  ; -0.500       ; 7.820      ; 5.531      ;
; -1.784 ; address[0]   ; choose_data:mux_boladao|s[0] ; address[0]   ; address[0]  ; 0.000        ; 7.315      ; 5.531      ;
; -1.735 ; cache2[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.339      ; 3.604      ;
; -1.733 ; cache1[2][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; -0.500       ; 4.837      ; 2.604      ;
; -1.710 ; cache0[0][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.332      ; 3.622      ;
; -1.707 ; cache1[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; -0.500       ; 4.833      ; 2.626      ;
; -1.696 ; cache3[0][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.341      ; 3.645      ;
; -1.694 ; cache3[0][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.337      ; 3.643      ;
; -1.649 ; cache1[0][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.342      ; 3.693      ;
; -1.624 ; cache2[2][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.342      ; 3.718      ;
; -1.617 ; cache3[3][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.153      ; 3.536      ;
; -1.616 ; cache3[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.325      ; 3.709      ;
; -1.607 ; cache1[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; -0.500       ; 4.837      ; 2.730      ;
; -1.604 ; cache3[2][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.157      ; 3.553      ;
; -1.581 ; cache1[2][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; -0.500       ; 4.833      ; 2.752      ;
; -1.570 ; cache0[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; -0.500       ; 4.827      ; 2.757      ;
; -1.562 ; cache3[1][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.341      ; 3.779      ;
; -1.555 ; address[0]   ; choose_data:mux_boladao|s[1] ; address[0]   ; address[0]  ; -0.500       ; 7.487      ; 5.432      ;
; -1.554 ; cache2[3][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.171      ; 3.617      ;
; -1.546 ; cache0[2][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.341      ; 3.795      ;
; -1.524 ; cache1[1][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.342      ; 3.818      ;
; -1.480 ; cache3[0][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.169      ; 3.689      ;
; -1.470 ; cache1[2][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; -0.500       ; 4.665      ; 2.695      ;
; -1.463 ; address[0]   ; choose_data:mux_boladao|s[2] ; address[0]   ; address[0]  ; -0.500       ; 7.483      ; 5.520      ;
; -1.408 ; cache0[3][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.164      ; 3.756      ;
; -1.403 ; cache1[0][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.174      ; 3.771      ;
; -1.383 ; cache0[2][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.169      ; 3.786      ;
; -1.376 ; cache2[2][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.346      ; 3.970      ;
; -1.376 ; cache2[1][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.163      ; 3.787      ;
; -1.372 ; cache0[1][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; -0.500       ; 4.833      ; 2.961      ;
; -1.365 ; cache3[1][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 4.961      ; 3.596      ;
; -1.341 ; cache1[3][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; -0.500       ; 4.665      ; 2.824      ;
; -1.306 ; cache3[1][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 4.957      ; 3.651      ;
; -1.298 ; cache2[1][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 4.937      ; 3.639      ;
; -1.294 ; cache3[2][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; -0.500       ; 4.820      ; 3.026      ;
; -1.293 ; cache3[1][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.337      ; 4.044      ;
; -1.284 ; address[0]   ; choose_data:mux_boladao|s[0] ; address[0]   ; address[0]  ; -0.500       ; 7.315      ; 5.531      ;
; -1.278 ; cache2[1][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 4.933      ; 3.655      ;
; -1.277 ; cache1[1][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.174      ; 3.897      ;
; -1.275 ; cache1[1][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.346      ; 4.071      ;
; -1.259 ; cache0[1][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; -0.500       ; 4.829      ; 3.070      ;
; -1.252 ; cache2[1][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; -0.500       ; 4.830      ; 3.078      ;
; -1.236 ; cache2[2][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.174      ; 3.938      ;
; -1.235 ; cache1[0][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.335      ; 4.100      ;
; -1.225 ; cache2[2][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 4.992      ; 3.767      ;
; -1.205 ; cache2[2][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 4.988      ; 3.783      ;
; -1.199 ; cache2[2][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 4.992      ; 3.793      ;
; -1.190 ; cache3[1][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 4.951      ; 3.761      ;
; -1.190 ; cache2[3][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 4.987      ; 3.797      ;
; -1.179 ; cache2[2][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 4.988      ; 3.809      ;
; -1.170 ; cache2[3][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 4.983      ; 3.813      ;
; -1.168 ; cache1[1][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.196      ; 4.028      ;
; -1.151 ; cache3[2][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 4.950      ; 3.799      ;
; -1.127 ; cache3[1][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 4.789      ; 3.662      ;
; -1.125 ; cache1[1][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 5.200      ; 4.075      ;
; -1.099 ; cache2[1][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 4.765      ; 3.666      ;
; -1.094 ; cache1[2][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 4.959      ; 3.865      ;
; -1.081 ; cache3[1][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.169      ; 4.088      ;
; -1.069 ; cache0[0][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; -0.500       ; 4.831      ; 3.262      ;
; -1.051 ; cache1[2][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 4.963      ; 3.912      ;
; -1.037 ; cache3[2][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 4.950      ; 3.913      ;
; -1.026 ; cache2[2][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 4.820      ; 3.794      ;
; -1.005 ; cache3[1][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 4.947      ; 3.942      ;
; -1.000 ; cache2[2][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 4.820      ; 3.820      ;
; -0.998 ; cache2[0][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.331      ; 4.333      ;
; -0.992 ; cache3[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; -0.500       ; 4.816      ; 3.324      ;
; -0.991 ; cache2[3][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 4.815      ; 3.824      ;
; -0.989 ; cache1[1][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 5.028      ; 4.039      ;
; -0.977 ; cache3[2][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 4.962      ; 3.985      ;
; -0.969 ; cache0[2][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 5.337      ; 4.368      ;
; -0.966 ; cache3[2][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 4.946      ; 3.980      ;
; -0.955 ; cache2[0][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; -0.500       ; 4.822      ; 3.367      ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clock'                                                                                      ;
+-------+--------------+------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node    ; To Node          ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+--------------+------------------+--------------+-------------+--------------+------------+------------+
; 0.391 ; cache0[0][8] ; cache0[0][8]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache1[0][8] ; cache1[0][8]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache1[1][8] ; cache1[1][8]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache2[3][8] ; cache2[3][8]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache1[0][1] ; cache1[0][1]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache1[3][7] ; cache1[3][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache0[3][7] ; cache0[3][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache2[3][7] ; cache2[3][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache1[1][7] ; cache1[1][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache1[2][7] ; cache1[2][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache2[1][7] ; cache2[1][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache0[1][7] ; cache0[1][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache0[2][7] ; cache0[2][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache2[0][7] ; cache2[0][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache0[0][7] ; cache0[0][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache1[0][7] ; cache1[0][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache0[0][6] ; cache0[0][6]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache1[0][6] ; cache1[0][6]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; cache1[1][6] ; cache1[1][6]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.994 ; address[0]   ; cache1[3][8]     ; address[0]   ; clock       ; 0.000        ; 3.244      ; 4.504      ;
; 1.051 ; cache2[2][7] ; cache2[2][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 1.317      ;
; 1.125 ; address[0]   ; cache2[1][5]     ; address[0]   ; clock       ; 0.000        ; 3.165      ; 4.556      ;
; 1.125 ; address[0]   ; cache2[1][4]     ; address[0]   ; clock       ; 0.000        ; 3.165      ; 4.556      ;
; 1.125 ; address[0]   ; cache2[1][3]     ; address[0]   ; clock       ; 0.000        ; 3.165      ; 4.556      ;
; 1.157 ; address[0]   ; cache3[2][4]     ; address[0]   ; clock       ; 0.000        ; 3.042      ; 4.465      ;
; 1.157 ; address[0]   ; cache3[2][3]     ; address[0]   ; clock       ; 0.000        ; 3.042      ; 4.465      ;
; 1.157 ; address[0]   ; cache3[2][5]     ; address[0]   ; clock       ; 0.000        ; 3.042      ; 4.465      ;
; 1.168 ; address[0]   ; cache3[1][4]     ; address[0]   ; clock       ; 0.000        ; 3.041      ; 4.475      ;
; 1.168 ; address[0]   ; cache3[1][5]     ; address[0]   ; clock       ; 0.000        ; 3.041      ; 4.475      ;
; 1.183 ; cache1[2][6] ; out_data[6]~reg0 ; clock        ; clock       ; 0.000        ; 0.000      ; 1.449      ;
; 1.187 ; address[0]   ; cache2[2][5]     ; address[0]   ; clock       ; 0.000        ; 3.000      ; 4.453      ;
; 1.187 ; address[0]   ; cache2[2][4]     ; address[0]   ; clock       ; 0.000        ; 3.000      ; 4.453      ;
; 1.187 ; address[0]   ; cache2[2][3]     ; address[0]   ; clock       ; 0.000        ; 3.000      ; 4.453      ;
; 1.254 ; address[0]   ; cache2[3][5]     ; address[0]   ; clock       ; 0.000        ; 3.005      ; 4.525      ;
; 1.254 ; address[0]   ; cache2[3][4]     ; address[0]   ; clock       ; 0.000        ; 3.005      ; 4.525      ;
; 1.254 ; address[0]   ; cache2[3][3]     ; address[0]   ; clock       ; 0.000        ; 3.005      ; 4.525      ;
; 1.257 ; address[0]   ; cache1[1][5]     ; address[0]   ; clock       ; 0.000        ; 2.792      ; 4.315      ;
; 1.257 ; address[0]   ; cache1[1][4]     ; address[0]   ; clock       ; 0.000        ; 2.792      ; 4.315      ;
; 1.257 ; address[0]   ; cache1[1][3]     ; address[0]   ; clock       ; 0.000        ; 2.792      ; 4.315      ;
; 1.269 ; address[0]   ; cache3[1][8]     ; address[0]   ; clock       ; 0.000        ; 3.031      ; 4.566      ;
; 1.273 ; address[0]   ; cache3[0][5]     ; address[0]   ; clock       ; 0.000        ; 3.245      ; 4.784      ;
; 1.291 ; address[0]   ; cache0[1][5]     ; address[0]   ; clock       ; 0.000        ; 2.901      ; 4.458      ;
; 1.291 ; address[0]   ; cache0[1][3]     ; address[0]   ; clock       ; 0.000        ; 2.901      ; 4.458      ;
; 1.291 ; address[0]   ; cache0[1][4]     ; address[0]   ; clock       ; 0.000        ; 2.901      ; 4.458      ;
; 1.347 ; address[0]   ; cache0[2][5]     ; address[0]   ; clock       ; 0.000        ; 2.890      ; 4.503      ;
; 1.347 ; address[0]   ; cache0[2][3]     ; address[0]   ; clock       ; 0.000        ; 2.890      ; 4.503      ;
; 1.347 ; address[0]   ; cache0[2][4]     ; address[0]   ; clock       ; 0.000        ; 2.890      ; 4.503      ;
; 1.348 ; cache3[0][7] ; cache3[0][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 1.614      ;
; 1.359 ; address[0]   ; cache1[3][6]     ; address[0]   ; clock       ; 0.000        ; 2.658      ; 4.283      ;
; 1.364 ; address[0]   ; cache3[3][4]     ; address[0]   ; clock       ; 0.000        ; 2.881      ; 4.511      ;
; 1.364 ; address[0]   ; cache3[3][3]     ; address[0]   ; clock       ; 0.000        ; 2.881      ; 4.511      ;
; 1.364 ; address[0]   ; cache3[3][5]     ; address[0]   ; clock       ; 0.000        ; 2.881      ; 4.511      ;
; 1.373 ; address[0]   ; cache3[2][6]     ; address[0]   ; clock       ; 0.000        ; 2.667      ; 4.306      ;
; 1.377 ; cache3[2][7] ; cache3[2][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 1.643      ;
; 1.384 ; address[0]   ; cache1[3][5]     ; address[0]   ; clock       ; 0.000        ; 3.030      ; 4.680      ;
; 1.384 ; address[0]   ; cache1[3][4]     ; address[0]   ; clock       ; 0.000        ; 3.030      ; 4.680      ;
; 1.384 ; address[0]   ; cache1[3][3]     ; address[0]   ; clock       ; 0.000        ; 3.030      ; 4.680      ;
; 1.384 ; address[0]   ; cache2[2][8]     ; address[0]   ; clock       ; 0.000        ; 3.020      ; 4.670      ;
; 1.388 ; cache3[1][7] ; cache3[1][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 1.654      ;
; 1.394 ; address[0]   ; cache1[0][5]     ; address[0]   ; clock       ; 0.000        ; 2.802      ; 4.462      ;
; 1.394 ; address[0]   ; cache1[0][4]     ; address[0]   ; clock       ; 0.000        ; 2.802      ; 4.462      ;
; 1.394 ; address[0]   ; cache1[0][3]     ; address[0]   ; clock       ; 0.000        ; 2.802      ; 4.462      ;
; 1.394 ; address[0]   ; cache3[3][0]     ; address[0]   ; clock       ; 0.000        ; 2.667      ; 4.327      ;
; 1.394 ; address[0]   ; cache3[3][1]     ; address[0]   ; clock       ; 0.000        ; 2.667      ; 4.327      ;
; 1.394 ; address[0]   ; cache3[3][2]     ; address[0]   ; clock       ; 0.000        ; 2.667      ; 4.327      ;
; 1.399 ; address[0]   ; cache1[2][5]     ; address[0]   ; clock       ; 0.000        ; 3.029      ; 4.694      ;
; 1.399 ; address[0]   ; cache1[2][4]     ; address[0]   ; clock       ; 0.000        ; 3.029      ; 4.694      ;
; 1.399 ; address[0]   ; cache1[2][3]     ; address[0]   ; clock       ; 0.000        ; 3.029      ; 4.694      ;
; 1.408 ; address[0]   ; cache1[1][8]     ; address[0]   ; clock       ; 0.000        ; 2.877      ; 4.551      ;
; 1.437 ; address[0]   ; cache2[0][5]     ; address[0]   ; clock       ; 0.000        ; 3.001      ; 4.704      ;
; 1.437 ; address[0]   ; cache2[0][4]     ; address[0]   ; clock       ; 0.000        ; 3.001      ; 4.704      ;
; 1.437 ; address[0]   ; cache2[0][3]     ; address[0]   ; clock       ; 0.000        ; 3.001      ; 4.704      ;
; 1.444 ; address[0]   ; cache0[2][8]     ; address[0]   ; clock       ; 0.000        ; 2.688      ; 4.398      ;
; 1.457 ; address[0]   ; cache1[2][8]     ; address[0]   ; clock       ; 0.000        ; 3.243      ; 4.966      ;
; 1.470 ; address[0]   ; cache0[2][6]     ; address[0]   ; clock       ; 0.000        ; 2.663      ; 4.399      ;
; 1.478 ; address[0]   ; cache0[0][8]     ; address[0]   ; clock       ; 0.000        ; 2.877      ; 4.621      ;
; 1.479 ; address[0]   ; cache1[0][8]     ; address[0]   ; clock       ; 0.000        ; 2.877      ; 4.622      ;
; 1.483 ; address[0]   ; cache3[2][8]     ; address[0]   ; clock       ; 0.000        ; 3.030      ; 4.779      ;
; 1.494 ; address[0]   ; cache1[3][8]     ; address[0]   ; clock       ; -0.500       ; 3.244      ; 4.504      ;
; 1.537 ; address[0]   ; cache0[1][0]     ; address[0]   ; clock       ; 0.000        ; 2.654      ; 4.457      ;
; 1.537 ; address[0]   ; cache0[1][1]     ; address[0]   ; clock       ; 0.000        ; 2.654      ; 4.457      ;
; 1.537 ; address[0]   ; cache0[1][2]     ; address[0]   ; clock       ; 0.000        ; 2.654      ; 4.457      ;
; 1.540 ; address[0]   ; cache2[2][0]     ; address[0]   ; clock       ; 0.000        ; 2.646      ; 4.452      ;
; 1.540 ; address[0]   ; cache2[2][1]     ; address[0]   ; clock       ; 0.000        ; 2.646      ; 4.452      ;
; 1.540 ; address[0]   ; cache2[2][2]     ; address[0]   ; clock       ; 0.000        ; 2.646      ; 4.452      ;
; 1.543 ; address[0]   ; cache2[2][6]     ; address[0]   ; clock       ; 0.000        ; 2.664      ; 4.473      ;
; 1.584 ; address[0]   ; cache2[0][8]     ; address[0]   ; clock       ; 0.000        ; 3.232      ; 5.082      ;
; 1.586 ; address[0]   ; cache0[2][0]     ; address[0]   ; clock       ; 0.000        ; 2.651      ; 4.503      ;
; 1.586 ; address[0]   ; cache0[2][1]     ; address[0]   ; clock       ; 0.000        ; 2.651      ; 4.503      ;
; 1.586 ; address[0]   ; cache0[2][2]     ; address[0]   ; clock       ; 0.000        ; 2.651      ; 4.503      ;
; 1.588 ; address[0]   ; cache3[0][4]     ; address[0]   ; clock       ; 0.000        ; 3.009      ; 4.863      ;
; 1.588 ; address[0]   ; cache3[0][3]     ; address[0]   ; clock       ; 0.000        ; 3.009      ; 4.863      ;
; 1.588 ; address[0]   ; cache3[0][8]     ; address[0]   ; clock       ; 0.000        ; 3.009      ; 4.863      ;
; 1.597 ; address[0]   ; cache2[3][7]     ; address[0]   ; clock       ; 0.000        ; 2.672      ; 4.535      ;
; 1.603 ; address[0]   ; cache2[3][6]     ; address[0]   ; clock       ; 0.000        ; 2.657      ; 4.526      ;
; 1.603 ; address[0]   ; cache2[1][6]     ; address[0]   ; clock       ; 0.000        ; 2.657      ; 4.526      ;
; 1.614 ; address[0]   ; cache3[1][3]     ; address[0]   ; clock       ; 0.000        ; 3.002      ; 4.882      ;
; 1.625 ; address[0]   ; cache2[1][5]     ; address[0]   ; clock       ; -0.500       ; 3.165      ; 4.556      ;
; 1.625 ; address[0]   ; cache2[1][4]     ; address[0]   ; clock       ; -0.500       ; 3.165      ; 4.556      ;
; 1.625 ; address[0]   ; cache2[1][3]     ; address[0]   ; clock       ; -0.500       ; 3.165      ; 4.556      ;
+-------+--------------+------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clock'                                                       ;
+--------+--------------+----------------+------------------+-------+------------+--------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target       ;
+--------+--------------+----------------+------------------+-------+------------+--------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clock ; Rise       ; clock        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[1][4] ;
+--------+--------------+----------------+------------------+-------+------------+--------------+


+--------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'address[0]'                                                                             ;
+--------+--------------+----------------+------------------+------------+------------+------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock      ; Clock Edge ; Target                             ;
+--------+--------------+----------------+------------------+------------+------------+------------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; address[0] ; Rise       ; address[0]                         ;
; -0.532 ; -0.532       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; choose_data:mux_boladao|s[0]       ;
; -0.532 ; -0.532       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; choose_data:mux_boladao|s[0]       ;
; -0.532 ; -0.532       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; choose_data:mux_boladao|s[1]       ;
; -0.532 ; -0.532       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; choose_data:mux_boladao|s[1]       ;
; -0.532 ; -0.532       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; choose_data:mux_boladao|s[2]       ;
; -0.532 ; -0.532       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; choose_data:mux_boladao|s[2]       ;
; -0.532 ; -0.532       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0clkctrl|inclk[0] ;
; -0.532 ; -0.532       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0clkctrl|inclk[0] ;
; -0.532 ; -0.532       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0clkctrl|outclk   ;
; -0.532 ; -0.532       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0clkctrl|outclk   ;
; -0.532 ; -0.532       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0|combout         ;
; -0.532 ; -0.532       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0|combout         ;
; -0.532 ; -0.532       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|s[0]|datad             ;
; -0.532 ; -0.532       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|s[0]|datad             ;
; -0.532 ; -0.532       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|s[1]|datac             ;
; -0.532 ; -0.532       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|s[1]|datac             ;
; -0.532 ; -0.532       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|s[2]|datac             ;
; -0.532 ; -0.532       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|s[2]|datac             ;
; -0.135 ; -0.135       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache0|combout                 ;
; -0.135 ; -0.135       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache0|combout                 ;
; -0.135 ; -0.135       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0|datac           ;
; -0.135 ; -0.135       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0|datac           ;
; -0.069 ; -0.069       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal3~0|combout                   ;
; -0.069 ; -0.069       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal3~0|combout                   ;
; -0.069 ; -0.069       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal3~0|datad                     ;
; -0.069 ; -0.069       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal3~0|datad                     ;
; -0.069 ; -0.069       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux23~1|combout                    ;
; -0.069 ; -0.069       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux23~1|combout                    ;
; -0.069 ; -0.069       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache3~0|combout               ;
; -0.069 ; -0.069       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache3~0|combout               ;
; -0.069 ; -0.069       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache3~0|datab                 ;
; -0.069 ; -0.069       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache3~0|datab                 ;
; -0.069 ; -0.069       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0|datab           ;
; -0.069 ; -0.069       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0|datab           ;
; -0.068 ; -0.068       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache1|combout                 ;
; -0.068 ; -0.068       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache1|combout                 ;
; -0.068 ; -0.068       ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0|dataa           ;
; -0.068 ; -0.068       ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0|dataa           ;
; 0.112  ; 0.112        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux0~1|combout                     ;
; 0.112  ; 0.112        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux0~1|combout                     ;
; 0.112  ; 0.112        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache0|datac                   ;
; 0.112  ; 0.112        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache0|datac                   ;
; 0.180  ; 0.180        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal1~0|combout                   ;
; 0.180  ; 0.180        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal1~0|combout                   ;
; 0.180  ; 0.180        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal1~0|datad                     ;
; 0.180  ; 0.180        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal1~0|datad                     ;
; 0.180  ; 0.180        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux9~1|combout                     ;
; 0.180  ; 0.180        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux9~1|combout                     ;
; 0.180  ; 0.180        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache1|datad                   ;
; 0.180  ; 0.180        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache1|datad                   ;
; 0.222  ; 0.222        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux7~1|combout                     ;
; 0.222  ; 0.222        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux7~1|combout                     ;
; 0.222  ; 0.222        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache1|datac                   ;
; 0.222  ; 0.222        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache1|datac                   ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; choose_data:mux_boladao|s[0]       ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; choose_data:mux_boladao|s[0]       ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; choose_data:mux_boladao|s[1]       ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; choose_data:mux_boladao|s[1]       ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; choose_data:mux_boladao|s[2]       ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; choose_data:mux_boladao|s[2]       ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; hit_cache2|combout                 ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; hit_cache2|combout                 ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|Mux9~0clkctrl|inclk[0] ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|Mux9~0clkctrl|inclk[0] ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|Mux9~0clkctrl|outclk   ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|Mux9~0clkctrl|outclk   ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|Mux9~0|combout         ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|Mux9~0|combout         ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|Mux9~0|datad           ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|Mux9~0|datad           ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|s[0]|datad             ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|s[0]|datad             ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|s[1]|datac             ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|s[1]|datac             ;
; 0.251  ; 0.251        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|s[2]|datac             ;
; 0.251  ; 0.251        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|s[2]|datac             ;
; 0.284  ; 0.284        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal0~0|combout                   ;
; 0.284  ; 0.284        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal0~0|combout                   ;
; 0.284  ; 0.284        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache0|datad                   ;
; 0.284  ; 0.284        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache0|datad                   ;
; 0.294  ; 0.294        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal2~0|combout                   ;
; 0.294  ; 0.294        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal2~0|combout                   ;
; 0.294  ; 0.294        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache2|datad                   ;
; 0.294  ; 0.294        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache2|datad                   ;
; 0.345  ; 0.345        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux21~1|combout                    ;
; 0.345  ; 0.345        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux21~1|combout                    ;
; 0.345  ; 0.345        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache3~0|datad                 ;
; 0.345  ; 0.345        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache3~0|datad                 ;
; 0.347  ; 0.347        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux14~1|combout                    ;
; 0.347  ; 0.347        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux14~1|combout                    ;
; 0.347  ; 0.347        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache2|datac                   ;
; 0.347  ; 0.347        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache2|datac                   ;
; 0.387  ; 0.387        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal0~0|datad                     ;
; 0.387  ; 0.387        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal0~0|datad                     ;
; 0.387  ; 0.387        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux3~1|combout                     ;
; 0.387  ; 0.387        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux3~1|combout                     ;
; 0.406  ; 0.406        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal0~0|datac                     ;
; 0.406  ; 0.406        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal0~0|datac                     ;
; 0.406  ; 0.406        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux2~1|combout                     ;
+--------+--------------+----------------+------------------+------------+------------+------------------------------------+


+--------------------------------------------------------------------------+
; Setup Times                                                              ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; address[*]   ; address[0] ; 4.333 ; 4.333 ; Rise       ; address[0]      ;
;  address[0]  ; address[0] ; 0.512 ; 0.512 ; Rise       ; address[0]      ;
;  address[1]  ; address[0] ; 1.837 ; 1.837 ; Rise       ; address[0]      ;
;  address[2]  ; address[0] ; 4.333 ; 4.333 ; Rise       ; address[0]      ;
;  address[3]  ; address[0] ; 4.053 ; 4.053 ; Rise       ; address[0]      ;
;  address[4]  ; address[0] ; 0.505 ; 0.505 ; Rise       ; address[0]      ;
; address[*]   ; address[0] ; 4.055 ; 4.055 ; Fall       ; address[0]      ;
;  address[0]  ; address[0] ; 0.234 ; 0.234 ; Fall       ; address[0]      ;
;  address[1]  ; address[0] ; 1.559 ; 1.559 ; Fall       ; address[0]      ;
;  address[2]  ; address[0] ; 4.055 ; 4.055 ; Fall       ; address[0]      ;
;  address[3]  ; address[0] ; 3.775 ; 3.775 ; Fall       ; address[0]      ;
;  address[4]  ; address[0] ; 0.227 ; 0.227 ; Fall       ; address[0]      ;
; address[*]   ; clock      ; 9.112 ; 9.112 ; Rise       ; clock           ;
;  address[0]  ; clock      ; 5.200 ; 5.200 ; Rise       ; clock           ;
;  address[1]  ; clock      ; 6.685 ; 6.685 ; Rise       ; clock           ;
;  address[2]  ; clock      ; 9.112 ; 9.112 ; Rise       ; clock           ;
;  address[3]  ; clock      ; 8.832 ; 8.832 ; Rise       ; clock           ;
;  address[4]  ; clock      ; 5.321 ; 5.321 ; Rise       ; clock           ;
; dataIn[*]    ; clock      ; 5.991 ; 5.991 ; Rise       ; clock           ;
;  dataIn[0]   ; clock      ; 3.894 ; 3.894 ; Rise       ; clock           ;
;  dataIn[1]   ; clock      ; 5.991 ; 5.991 ; Rise       ; clock           ;
;  dataIn[2]   ; clock      ; 4.748 ; 4.748 ; Rise       ; clock           ;
; write_enable ; clock      ; 6.518 ; 6.518 ; Rise       ; clock           ;
+--------------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------------------------------+
; Hold Times                                                                 ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; address[*]   ; address[0] ; 2.593  ; 2.593  ; Rise       ; address[0]      ;
;  address[0]  ; address[0] ; 2.560  ; 2.560  ; Rise       ; address[0]      ;
;  address[1]  ; address[0] ; 2.593  ; 2.593  ; Rise       ; address[0]      ;
;  address[2]  ; address[0] ; -1.515 ; -1.515 ; Rise       ; address[0]      ;
;  address[3]  ; address[0] ; -1.304 ; -1.304 ; Rise       ; address[0]      ;
;  address[4]  ; address[0] ; 2.034  ; 2.034  ; Rise       ; address[0]      ;
; address[*]   ; address[0] ; 2.088  ; 2.088  ; Fall       ; address[0]      ;
;  address[0]  ; address[0] ; 2.055  ; 2.055  ; Fall       ; address[0]      ;
;  address[1]  ; address[0] ; 2.088  ; 2.088  ; Fall       ; address[0]      ;
;  address[2]  ; address[0] ; -2.020 ; -2.020 ; Fall       ; address[0]      ;
;  address[3]  ; address[0] ; -1.809 ; -1.809 ; Fall       ; address[0]      ;
;  address[4]  ; address[0] ; 1.529  ; 1.529  ; Fall       ; address[0]      ;
; address[*]   ; clock      ; 0.391  ; 0.391  ; Rise       ; clock           ;
;  address[0]  ; clock      ; -0.994 ; -0.994 ; Rise       ; clock           ;
;  address[1]  ; clock      ; -0.256 ; -0.256 ; Rise       ; clock           ;
;  address[2]  ; clock      ; -2.806 ; -2.806 ; Rise       ; clock           ;
;  address[3]  ; clock      ; -2.903 ; -2.903 ; Rise       ; clock           ;
;  address[4]  ; clock      ; 0.391  ; 0.391  ; Rise       ; clock           ;
; dataIn[*]    ; clock      ; -2.896 ; -2.896 ; Rise       ; clock           ;
;  dataIn[0]   ; clock      ; -3.109 ; -3.109 ; Rise       ; clock           ;
;  dataIn[1]   ; clock      ; -2.896 ; -2.896 ; Rise       ; clock           ;
;  dataIn[2]   ; clock      ; -3.296 ; -3.296 ; Rise       ; clock           ;
; write_enable ; clock      ; -2.549 ; -2.549 ; Rise       ; clock           ;
+--------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; hit          ; address[0] ; 8.468  ; 8.468  ; Rise       ; address[0]      ;
; hit          ; address[0] ; 8.468  ; 8.468  ; Fall       ; address[0]      ;
; hit          ; clock      ; 10.548 ; 10.548 ; Rise       ; clock           ;
; out_data[*]  ; clock      ; 6.523  ; 6.523  ; Rise       ; clock           ;
;  out_data[0] ; clock      ; 6.445  ; 6.445  ; Rise       ; clock           ;
;  out_data[1] ; clock      ; 6.487  ; 6.487  ; Rise       ; clock           ;
;  out_data[2] ; clock      ; 6.503  ; 6.503  ; Rise       ; clock           ;
;  out_data[3] ; clock      ; 6.452  ; 6.452  ; Rise       ; clock           ;
;  out_data[4] ; clock      ; 6.438  ; 6.438  ; Rise       ; clock           ;
;  out_data[5] ; clock      ; 6.454  ; 6.454  ; Rise       ; clock           ;
;  out_data[6] ; clock      ; 6.248  ; 6.248  ; Rise       ; clock           ;
;  out_data[7] ; clock      ; 6.523  ; 6.523  ; Rise       ; clock           ;
;  out_data[8] ; clock      ; 6.225  ; 6.225  ; Rise       ; clock           ;
+--------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------+
; Minimum Clock to Output Times                                            ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; hit          ; address[0] ; 7.788 ; 7.788 ; Rise       ; address[0]      ;
; hit          ; address[0] ; 7.788 ; 7.788 ; Fall       ; address[0]      ;
; hit          ; clock      ; 8.515 ; 8.515 ; Rise       ; clock           ;
; out_data[*]  ; clock      ; 6.225 ; 6.225 ; Rise       ; clock           ;
;  out_data[0] ; clock      ; 6.445 ; 6.445 ; Rise       ; clock           ;
;  out_data[1] ; clock      ; 6.487 ; 6.487 ; Rise       ; clock           ;
;  out_data[2] ; clock      ; 6.503 ; 6.503 ; Rise       ; clock           ;
;  out_data[3] ; clock      ; 6.452 ; 6.452 ; Rise       ; clock           ;
;  out_data[4] ; clock      ; 6.438 ; 6.438 ; Rise       ; clock           ;
;  out_data[5] ; clock      ; 6.454 ; 6.454 ; Rise       ; clock           ;
;  out_data[6] ; clock      ; 6.248 ; 6.248 ; Rise       ; clock           ;
;  out_data[7] ; clock      ; 6.523 ; 6.523 ; Rise       ; clock           ;
;  out_data[8] ; clock      ; 6.225 ; 6.225 ; Rise       ; clock           ;
+--------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------+
; Propagation Delay                                            ;
+------------+-------------+--------+--------+--------+--------+
; Input Port ; Output Port ; RR     ; RF     ; FR     ; FF     ;
+------------+-------------+--------+--------+--------+--------+
; address[1] ; hit         ; 9.953  ; 9.953  ; 9.953  ; 9.953  ;
; address[2] ; hit         ; 12.380 ; 12.380 ; 12.380 ; 12.380 ;
; address[3] ; hit         ; 12.100 ; 12.100 ; 12.100 ; 12.100 ;
; address[4] ; hit         ; 8.384  ; 8.384  ; 8.384  ; 8.384  ;
+------------+-------------+--------+--------+--------+--------+


+--------------------------------------------------------------+
; Minimum Propagation Delay                                    ;
+------------+-------------+--------+--------+--------+--------+
; Input Port ; Output Port ; RR     ; RF     ; FR     ; FF     ;
+------------+-------------+--------+--------+--------+--------+
; address[1] ; hit         ; 8.605  ; 8.605  ; 8.605  ; 8.605  ;
; address[2] ; hit         ; 11.485 ; 11.485 ; 11.485 ; 11.485 ;
; address[3] ; hit         ; 11.544 ; 11.544 ; 11.544 ; 11.544 ;
; address[4] ; hit         ; 8.097  ; 8.097  ; 8.097  ; 8.097  ;
+------------+-------------+--------+--------+--------+--------+


+-------------------------------------+
; Fast Model Setup Summary            ;
+------------+--------+---------------+
; Clock      ; Slack  ; End Point TNS ;
+------------+--------+---------------+
; clock      ; -2.123 ; -273.542      ;
; address[0] ; -0.206 ; -0.544        ;
+------------+--------+---------------+


+-------------------------------------+
; Fast Model Hold Summary             ;
+------------+--------+---------------+
; Clock      ; Slack  ; End Point TNS ;
+------------+--------+---------------+
; address[0] ; -1.528 ; -4.431        ;
; clock      ; 0.215  ; 0.000         ;
+------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+------------+--------+------------------+
; Clock      ; Slack  ; End Point TNS    ;
+------------+--------+------------------+
; clock      ; -1.380 ; -154.380         ;
; address[0] ; -1.222 ; -1.222           ;
+------------+--------+------------------+


+------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clock'                                                                                  ;
+--------+--------------+--------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node    ; To Node      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------+--------------+--------------+-------------+--------------+------------+------------+
; -2.123 ; cache2[1][5] ; cache1[3][0] ; clock        ; clock       ; 1.000        ; -0.053     ; 3.102      ;
; -2.123 ; cache2[1][5] ; cache1[3][1] ; clock        ; clock       ; 1.000        ; -0.053     ; 3.102      ;
; -2.123 ; cache2[1][5] ; cache1[3][2] ; clock        ; clock       ; 1.000        ; -0.053     ; 3.102      ;
; -2.121 ; cache2[1][5] ; cache0[0][5] ; clock        ; clock       ; 1.000        ; -0.101     ; 3.052      ;
; -2.121 ; cache2[1][5] ; cache0[0][4] ; clock        ; clock       ; 1.000        ; -0.101     ; 3.052      ;
; -2.115 ; cache2[1][5] ; cache0[0][3] ; clock        ; clock       ; 1.000        ; -0.079     ; 3.068      ;
; -2.103 ; cache2[1][3] ; cache1[3][0] ; clock        ; clock       ; 1.000        ; -0.053     ; 3.082      ;
; -2.103 ; cache2[1][3] ; cache1[3][1] ; clock        ; clock       ; 1.000        ; -0.053     ; 3.082      ;
; -2.103 ; cache2[1][3] ; cache1[3][2] ; clock        ; clock       ; 1.000        ; -0.053     ; 3.082      ;
; -2.101 ; cache2[1][3] ; cache0[0][5] ; clock        ; clock       ; 1.000        ; -0.101     ; 3.032      ;
; -2.101 ; cache2[1][3] ; cache0[0][4] ; clock        ; clock       ; 1.000        ; -0.101     ; 3.032      ;
; -2.097 ; cache2[1][5] ; cache0[2][8] ; clock        ; clock       ; 1.000        ; -0.206     ; 2.923      ;
; -2.095 ; cache2[1][3] ; cache0[0][3] ; clock        ; clock       ; 1.000        ; -0.079     ; 3.048      ;
; -2.077 ; cache2[1][3] ; cache0[2][8] ; clock        ; clock       ; 1.000        ; -0.206     ; 2.903      ;
; -2.072 ; cache2[1][5] ; cache1[3][5] ; clock        ; clock       ; 1.000        ; -0.035     ; 3.069      ;
; -2.072 ; cache2[1][5] ; cache1[3][4] ; clock        ; clock       ; 1.000        ; -0.035     ; 3.069      ;
; -2.072 ; cache2[1][5] ; cache1[3][3] ; clock        ; clock       ; 1.000        ; -0.035     ; 3.069      ;
; -2.052 ; cache2[1][3] ; cache1[3][5] ; clock        ; clock       ; 1.000        ; -0.035     ; 3.049      ;
; -2.052 ; cache2[1][3] ; cache1[3][4] ; clock        ; clock       ; 1.000        ; -0.035     ; 3.049      ;
; -2.052 ; cache2[1][3] ; cache1[3][3] ; clock        ; clock       ; 1.000        ; -0.035     ; 3.049      ;
; -2.021 ; cache2[0][8] ; cache1[3][0] ; clock        ; clock       ; 1.000        ; -0.099     ; 2.954      ;
; -2.021 ; cache2[0][8] ; cache1[3][1] ; clock        ; clock       ; 1.000        ; -0.099     ; 2.954      ;
; -2.021 ; cache2[0][8] ; cache1[3][2] ; clock        ; clock       ; 1.000        ; -0.099     ; 2.954      ;
; -2.019 ; cache3[0][8] ; cache1[3][0] ; clock        ; clock       ; 1.000        ; -0.007     ; 3.044      ;
; -2.019 ; cache3[0][8] ; cache1[3][1] ; clock        ; clock       ; 1.000        ; -0.007     ; 3.044      ;
; -2.019 ; cache3[0][8] ; cache1[3][2] ; clock        ; clock       ; 1.000        ; -0.007     ; 3.044      ;
; -2.019 ; cache2[0][8] ; cache0[0][5] ; clock        ; clock       ; 1.000        ; -0.147     ; 2.904      ;
; -2.019 ; cache2[0][8] ; cache0[0][4] ; clock        ; clock       ; 1.000        ; -0.147     ; 2.904      ;
; -2.018 ; cache3[1][3] ; cache1[3][0] ; clock        ; clock       ; 1.000        ; -0.005     ; 3.045      ;
; -2.018 ; cache3[1][3] ; cache1[3][1] ; clock        ; clock       ; 1.000        ; -0.005     ; 3.045      ;
; -2.018 ; cache3[1][3] ; cache1[3][2] ; clock        ; clock       ; 1.000        ; -0.005     ; 3.045      ;
; -2.017 ; cache3[0][8] ; cache0[0][5] ; clock        ; clock       ; 1.000        ; -0.055     ; 2.994      ;
; -2.017 ; cache3[0][8] ; cache0[0][4] ; clock        ; clock       ; 1.000        ; -0.055     ; 2.994      ;
; -2.016 ; cache3[1][3] ; cache0[0][5] ; clock        ; clock       ; 1.000        ; -0.053     ; 2.995      ;
; -2.016 ; cache3[1][3] ; cache0[0][4] ; clock        ; clock       ; 1.000        ; -0.053     ; 2.995      ;
; -2.013 ; cache2[0][8] ; cache0[0][3] ; clock        ; clock       ; 1.000        ; -0.125     ; 2.920      ;
; -2.011 ; cache3[0][8] ; cache0[0][3] ; clock        ; clock       ; 1.000        ; -0.033     ; 3.010      ;
; -2.010 ; cache3[1][3] ; cache0[0][3] ; clock        ; clock       ; 1.000        ; -0.031     ; 3.011      ;
; -2.007 ; cache2[2][4] ; cache1[3][0] ; clock        ; clock       ; 1.000        ; 0.006      ; 3.045      ;
; -2.007 ; cache2[2][4] ; cache1[3][1] ; clock        ; clock       ; 1.000        ; 0.006      ; 3.045      ;
; -2.007 ; cache2[2][4] ; cache1[3][2] ; clock        ; clock       ; 1.000        ; 0.006      ; 3.045      ;
; -2.005 ; cache2[2][4] ; cache0[0][5] ; clock        ; clock       ; 1.000        ; -0.042     ; 2.995      ;
; -2.005 ; cache2[2][4] ; cache0[0][4] ; clock        ; clock       ; 1.000        ; -0.042     ; 2.995      ;
; -1.999 ; cache2[2][4] ; cache0[0][3] ; clock        ; clock       ; 1.000        ; -0.020     ; 3.011      ;
; -1.995 ; cache2[0][8] ; cache0[2][8] ; clock        ; clock       ; 1.000        ; -0.252     ; 2.775      ;
; -1.993 ; cache3[0][8] ; cache0[2][8] ; clock        ; clock       ; 1.000        ; -0.160     ; 2.865      ;
; -1.992 ; cache3[1][3] ; cache0[2][8] ; clock        ; clock       ; 1.000        ; -0.158     ; 2.866      ;
; -1.981 ; cache2[2][4] ; cache0[2][8] ; clock        ; clock       ; 1.000        ; -0.147     ; 2.866      ;
; -1.970 ; cache2[0][8] ; cache1[3][5] ; clock        ; clock       ; 1.000        ; -0.081     ; 2.921      ;
; -1.970 ; cache2[0][8] ; cache1[3][4] ; clock        ; clock       ; 1.000        ; -0.081     ; 2.921      ;
; -1.970 ; cache2[0][8] ; cache1[3][3] ; clock        ; clock       ; 1.000        ; -0.081     ; 2.921      ;
; -1.969 ; cache2[1][5] ; cache0[1][8] ; clock        ; clock       ; 1.000        ; -0.202     ; 2.799      ;
; -1.969 ; cache2[1][5] ; cache0[0][0] ; clock        ; clock       ; 1.000        ; -0.047     ; 2.954      ;
; -1.969 ; cache2[1][5] ; cache0[0][1] ; clock        ; clock       ; 1.000        ; -0.047     ; 2.954      ;
; -1.969 ; cache2[1][5] ; cache0[0][2] ; clock        ; clock       ; 1.000        ; -0.047     ; 2.954      ;
; -1.968 ; cache3[0][8] ; cache1[3][5] ; clock        ; clock       ; 1.000        ; 0.011      ; 3.011      ;
; -1.968 ; cache3[0][8] ; cache1[3][4] ; clock        ; clock       ; 1.000        ; 0.011      ; 3.011      ;
; -1.968 ; cache3[0][8] ; cache1[3][3] ; clock        ; clock       ; 1.000        ; 0.011      ; 3.011      ;
; -1.967 ; cache3[1][3] ; cache1[3][5] ; clock        ; clock       ; 1.000        ; 0.013      ; 3.012      ;
; -1.967 ; cache3[1][3] ; cache1[3][4] ; clock        ; clock       ; 1.000        ; 0.013      ; 3.012      ;
; -1.967 ; cache3[1][3] ; cache1[3][3] ; clock        ; clock       ; 1.000        ; 0.013      ; 3.012      ;
; -1.959 ; cache2[1][5] ; cache0[3][5] ; clock        ; clock       ; 1.000        ; -0.101     ; 2.890      ;
; -1.959 ; cache2[1][5] ; cache0[3][4] ; clock        ; clock       ; 1.000        ; -0.101     ; 2.890      ;
; -1.958 ; cache2[1][5] ; cache3[3][8] ; clock        ; clock       ; 1.000        ; -0.215     ; 2.775      ;
; -1.958 ; cache1[1][3] ; cache1[3][0] ; clock        ; clock       ; 1.000        ; 0.104      ; 3.094      ;
; -1.958 ; cache1[1][3] ; cache1[3][1] ; clock        ; clock       ; 1.000        ; 0.104      ; 3.094      ;
; -1.958 ; cache1[1][3] ; cache1[3][2] ; clock        ; clock       ; 1.000        ; 0.104      ; 3.094      ;
; -1.957 ; cache2[1][5] ; cache3[3][7] ; clock        ; clock       ; 1.000        ; -0.038     ; 2.951      ;
; -1.956 ; cache1[1][3] ; cache0[0][5] ; clock        ; clock       ; 1.000        ; 0.056      ; 3.044      ;
; -1.956 ; cache1[1][3] ; cache0[0][4] ; clock        ; clock       ; 1.000        ; 0.056      ; 3.044      ;
; -1.956 ; cache2[2][4] ; cache1[3][5] ; clock        ; clock       ; 1.000        ; 0.024      ; 3.012      ;
; -1.956 ; cache2[2][4] ; cache1[3][4] ; clock        ; clock       ; 1.000        ; 0.024      ; 3.012      ;
; -1.956 ; cache2[2][4] ; cache1[3][3] ; clock        ; clock       ; 1.000        ; 0.024      ; 3.012      ;
; -1.954 ; cache2[1][5] ; cache0[3][8] ; clock        ; clock       ; 1.000        ; -0.108     ; 2.878      ;
; -1.952 ; cache0[2][3] ; cache1[3][0] ; clock        ; clock       ; 1.000        ; 0.065      ; 3.049      ;
; -1.952 ; cache0[2][3] ; cache1[3][1] ; clock        ; clock       ; 1.000        ; 0.065      ; 3.049      ;
; -1.952 ; cache0[2][3] ; cache1[3][2] ; clock        ; clock       ; 1.000        ; 0.065      ; 3.049      ;
; -1.950 ; cache2[1][5] ; cache0[3][3] ; clock        ; clock       ; 1.000        ; -0.079     ; 2.903      ;
; -1.950 ; cache0[2][3] ; cache0[0][5] ; clock        ; clock       ; 1.000        ; 0.017      ; 2.999      ;
; -1.950 ; cache0[2][3] ; cache0[0][4] ; clock        ; clock       ; 1.000        ; 0.017      ; 2.999      ;
; -1.950 ; cache1[1][3] ; cache0[0][3] ; clock        ; clock       ; 1.000        ; 0.078      ; 3.060      ;
; -1.949 ; cache2[1][3] ; cache0[1][8] ; clock        ; clock       ; 1.000        ; -0.202     ; 2.779      ;
; -1.949 ; cache2[1][3] ; cache0[0][0] ; clock        ; clock       ; 1.000        ; -0.047     ; 2.934      ;
; -1.949 ; cache2[1][3] ; cache0[0][1] ; clock        ; clock       ; 1.000        ; -0.047     ; 2.934      ;
; -1.949 ; cache2[1][3] ; cache0[0][2] ; clock        ; clock       ; 1.000        ; -0.047     ; 2.934      ;
; -1.948 ; cache2[1][5] ; cache0[1][5] ; clock        ; clock       ; 1.000        ; -0.111     ; 2.869      ;
; -1.948 ; cache2[1][5] ; cache0[1][3] ; clock        ; clock       ; 1.000        ; -0.111     ; 2.869      ;
; -1.948 ; cache2[1][5] ; cache0[1][4] ; clock        ; clock       ; 1.000        ; -0.111     ; 2.869      ;
; -1.945 ; cache2[1][5] ; cache0[2][5] ; clock        ; clock       ; 1.000        ; -0.118     ; 2.859      ;
; -1.945 ; cache2[1][5] ; cache0[2][3] ; clock        ; clock       ; 1.000        ; -0.118     ; 2.859      ;
; -1.945 ; cache2[1][5] ; cache0[2][4] ; clock        ; clock       ; 1.000        ; -0.118     ; 2.859      ;
; -1.944 ; cache0[2][3] ; cache0[0][3] ; clock        ; clock       ; 1.000        ; 0.039      ; 3.015      ;
; -1.939 ; cache2[1][3] ; cache0[3][5] ; clock        ; clock       ; 1.000        ; -0.101     ; 2.870      ;
; -1.939 ; cache2[1][3] ; cache0[3][4] ; clock        ; clock       ; 1.000        ; -0.101     ; 2.870      ;
; -1.938 ; cache2[1][3] ; cache3[3][8] ; clock        ; clock       ; 1.000        ; -0.215     ; 2.755      ;
; -1.937 ; cache2[1][3] ; cache3[3][7] ; clock        ; clock       ; 1.000        ; -0.038     ; 2.931      ;
; -1.934 ; cache2[1][3] ; cache0[3][8] ; clock        ; clock       ; 1.000        ; -0.108     ; 2.858      ;
; -1.933 ; cache0[2][3] ; cache0[2][8] ; clock        ; clock       ; 1.000        ; -0.088     ; 2.877      ;
; -1.933 ; cache3[2][4] ; cache1[3][0] ; clock        ; clock       ; 1.000        ; -0.019     ; 2.946      ;
; -1.933 ; cache3[2][4] ; cache1[3][1] ; clock        ; clock       ; 1.000        ; -0.019     ; 2.946      ;
+--------+--------------+--------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'address[0]'                                                                                             ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node    ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+
; -0.206 ; cache3[0][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.866      ; 2.225      ;
; -0.170 ; cache3[0][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 1.947      ; 2.215      ;
; -0.168 ; cache3[0][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 1.943      ; 2.221      ;
; -0.151 ; cache2[1][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.003      ; 2.264      ;
; -0.150 ; cache2[1][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.007      ; 2.255      ;
; -0.149 ; cache2[1][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.926      ; 2.228      ;
; -0.131 ; cache2[1][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.003      ; 2.244      ;
; -0.130 ; cache2[1][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.007      ; 2.235      ;
; -0.129 ; cache2[1][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.926      ; 2.208      ;
; -0.116 ; cache3[1][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.974      ; 2.243      ;
; -0.091 ; cache3[0][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.049      ; 2.250      ;
; -0.090 ; cache3[0][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.053      ; 2.241      ;
; -0.089 ; cache3[0][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.972      ; 2.214      ;
; -0.080 ; cache3[1][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.055      ; 2.233      ;
; -0.078 ; cache3[1][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.051      ; 2.239      ;
; -0.049 ; cache2[0][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 1.957      ; 2.116      ;
; -0.048 ; cache2[0][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 1.961      ; 2.107      ;
; -0.047 ; cache2[0][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.880      ; 2.080      ;
; -0.035 ; cache2[2][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.062      ; 2.207      ;
; -0.034 ; cache2[2][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.066      ; 2.198      ;
; -0.033 ; cache2[2][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.985      ; 2.171      ;
; -0.031 ; cache3[2][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.960      ; 2.144      ;
; -0.018 ; cache3[3][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 2.052      ; 2.223      ;
; -0.010 ; cache1[1][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 2.083      ; 2.246      ;
; 0.000  ; cache3[1][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.960      ; 2.113      ;
; 0.005  ; cache3[2][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.041      ; 2.134      ;
; 0.007  ; cache3[2][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.037      ; 2.140      ;
; 0.018  ; cache3[3][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.133      ; 2.213      ;
; 0.020  ; cache3[3][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.129      ; 2.219      ;
; 0.026  ; cache1[1][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.164      ; 2.236      ;
; 0.026  ; cache3[0][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.972      ; 2.099      ;
; 0.028  ; cache1[1][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.160      ; 2.242      ;
; 0.029  ; cache1[2][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.960      ; 2.084      ;
; 0.034  ; cache3[3][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 2.052      ; 2.171      ;
; 0.036  ; cache3[1][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.041      ; 2.103      ;
; 0.038  ; cache3[1][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.037      ; 2.109      ;
; 0.045  ; cache1[0][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 2.056      ; 2.164      ;
; 0.062  ; cache3[0][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.053      ; 2.089      ;
; 0.064  ; cache3[0][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.049      ; 2.095      ;
; 0.065  ; cache1[2][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.041      ; 2.074      ;
; 0.067  ; cache1[2][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.037      ; 2.080      ;
; 0.070  ; cache3[3][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.133      ; 2.161      ;
; 0.072  ; cache3[3][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.129      ; 2.167      ;
; 0.074  ; cache1[1][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 2.083      ; 2.162      ;
; 0.076  ; cache1[3][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.961      ; 2.038      ;
; 0.080  ; cache1[1][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 2.056      ; 2.129      ;
; 0.081  ; cache1[0][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.137      ; 2.154      ;
; 0.083  ; cache1[0][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.133      ; 2.160      ;
; 0.087  ; cache3[0][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.972      ; 2.038      ;
; 0.095  ; cache2[1][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.003      ; 2.018      ;
; 0.096  ; cache2[1][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.007      ; 2.009      ;
; 0.097  ; cache2[1][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.926      ; 1.982      ;
; 0.102  ; cache1[3][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.961      ; 2.012      ;
; 0.105  ; cache2[3][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 1.957      ; 1.962      ;
; 0.106  ; cache2[3][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 1.961      ; 1.953      ;
; 0.107  ; cache2[3][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.880      ; 1.926      ;
; 0.110  ; cache1[1][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.164      ; 2.152      ;
; 0.111  ; cache1[2][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.870      ; 1.912      ;
; 0.112  ; cache1[1][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.160      ; 2.158      ;
; 0.112  ; cache1[3][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.042      ; 2.028      ;
; 0.114  ; cache1[3][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.038      ; 2.034      ;
; 0.116  ; cache1[1][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.137      ; 2.119      ;
; 0.118  ; cache1[1][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.133      ; 2.125      ;
; 0.123  ; cache3[0][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.053      ; 2.028      ;
; 0.124  ; cache3[3][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 2.052      ; 2.081      ;
; 0.124  ; cache1[0][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 2.073      ; 2.102      ;
; 0.125  ; cache3[0][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.049      ; 2.034      ;
; 0.136  ; cache2[0][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.060      ; 2.034      ;
; 0.137  ; cache2[0][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.064      ; 2.025      ;
; 0.138  ; cache2[0][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.972      ; 1.987      ;
; 0.138  ; cache2[0][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.983      ; 1.998      ;
; 0.138  ; cache1[3][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.042      ; 2.002      ;
; 0.140  ; cache1[3][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.038      ; 2.008      ;
; 0.142  ; cache2[0][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.060      ; 2.028      ;
; 0.143  ; cache2[0][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.064      ; 2.019      ;
; 0.144  ; cache2[0][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.983      ; 1.992      ;
; 0.147  ; cache1[2][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 1.951      ; 1.902      ;
; 0.149  ; cache1[2][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 1.947      ; 1.908      ;
; 0.151  ; cache3[0][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 1.723      ; 2.225      ;
; 0.159  ; cache2[3][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.060      ; 2.011      ;
; 0.160  ; cache3[3][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.133      ; 2.071      ;
; 0.160  ; cache2[3][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.064      ; 2.002      ;
; 0.160  ; cache1[0][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.154      ; 2.092      ;
; 0.161  ; cache2[3][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.983      ; 1.975      ;
; 0.162  ; cache3[3][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.129      ; 2.077      ;
; 0.162  ; cache1[0][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.150      ; 2.098      ;
; 0.180  ; cache2[3][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.060      ; 1.990      ;
; 0.181  ; cache2[3][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.064      ; 1.981      ;
; 0.182  ; cache2[3][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.983      ; 1.954      ;
; 0.187  ; cache3[0][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 1.804      ; 2.215      ;
; 0.189  ; cache3[0][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 1.800      ; 2.221      ;
; 0.201  ; cache2[0][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.060      ; 1.969      ;
; 0.201  ; cache1[3][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.961      ; 1.913      ;
; 0.202  ; cache2[0][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.500        ; 2.064      ; 1.960      ;
; 0.203  ; cache2[0][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 1.983      ; 1.933      ;
; 0.206  ; cache2[1][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 1.000        ; 1.860      ; 2.264      ;
; 0.207  ; cache2[1][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 1.000        ; 1.864      ; 2.255      ;
; 0.208  ; cache2[1][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 1.000        ; 1.783      ; 2.228      ;
; 0.209  ; cache1[0][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.500        ; 2.073      ; 2.017      ;
; 0.225  ; cache3[3][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.500        ; 2.218      ; 2.103      ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'address[0]'                                                                                              ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node    ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+
; -1.528 ; address[0]   ; choose_data:mux_boladao|s[1] ; address[0]   ; address[0]  ; 0.000        ; 4.013      ; 2.485      ;
; -1.485 ; address[0]   ; choose_data:mux_boladao|s[2] ; address[0]   ; address[0]  ; 0.000        ; 4.009      ; 2.524      ;
; -1.418 ; address[0]   ; choose_data:mux_boladao|s[0] ; address[0]   ; address[0]  ; 0.000        ; 3.932      ; 2.514      ;
; -1.280 ; cache0[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.382      ; 1.102      ;
; -1.275 ; address[0]   ; choose_data:mux_boladao|s[1] ; address[0]   ; address[0]  ; 0.000        ; 3.760      ; 2.485      ;
; -1.240 ; cache2[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.374      ; 1.134      ;
; -1.232 ; address[0]   ; choose_data:mux_boladao|s[2] ; address[0]   ; address[0]  ; 0.000        ; 3.756      ; 2.524      ;
; -1.186 ; cache1[2][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.388      ; 1.202      ;
; -1.167 ; cache1[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.384      ; 1.217      ;
; -1.165 ; address[0]   ; choose_data:mux_boladao|s[0] ; address[0]   ; address[0]  ; 0.000        ; 3.679      ; 2.514      ;
; -1.164 ; cache1[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.388      ; 1.224      ;
; -1.145 ; cache1[2][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.384      ; 1.239      ;
; -1.118 ; cache0[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.378      ; 1.260      ;
; -1.073 ; cache1[2][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.307      ; 1.234      ;
; -1.059 ; cache0[1][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.384      ; 1.325      ;
; -1.049 ; cache1[3][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.307      ; 1.258      ;
; -1.028 ; address[0]   ; choose_data:mux_boladao|s[1] ; address[0]   ; address[0]  ; -0.500       ; 4.013      ; 2.485      ;
; -1.017 ; cache2[1][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.381      ; 1.364      ;
; -1.017 ; cache3[2][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.372      ; 1.355      ;
; -1.013 ; cache0[1][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.380      ; 1.367      ;
; -0.985 ; address[0]   ; choose_data:mux_boladao|s[2] ; address[0]   ; address[0]  ; -0.500       ; 4.009      ; 2.524      ;
; -0.918 ; address[0]   ; choose_data:mux_boladao|s[0] ; address[0]   ; address[0]  ; -0.500       ; 3.932      ; 2.514      ;
; -0.887 ; cache0[0][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.382      ; 1.495      ;
; -0.882 ; cache3[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.367      ; 1.485      ;
; -0.875 ; cache2[1][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.377      ; 1.502      ;
; -0.873 ; cache0[1][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.303      ; 1.430      ;
; -0.869 ; cache2[0][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.374      ; 1.505      ;
; -0.859 ; cache3[2][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.376      ; 1.517      ;
; -0.784 ; cache2[3][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.384      ; 1.600      ;
; -0.775 ; address[0]   ; choose_data:mux_boladao|s[1] ; address[0]   ; address[0]  ; -0.500       ; 3.760      ; 2.485      ;
; -0.744 ; cache0[0][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.378      ; 1.634      ;
; -0.732 ; address[0]   ; choose_data:mux_boladao|s[2] ; address[0]   ; address[0]  ; -0.500       ; 3.756      ; 2.524      ;
; -0.729 ; cache3[0][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.382      ; 1.653      ;
; -0.729 ; cache3[0][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.386      ; 1.657      ;
; -0.725 ; cache2[2][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.387      ; 1.662      ;
; -0.716 ; cache3[1][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.360      ; 1.644      ;
; -0.710 ; cache1[0][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.385      ; 1.675      ;
; -0.705 ; cache2[3][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.307      ; 1.602      ;
; -0.705 ; cache2[1][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.346      ; 1.641      ;
; -0.703 ; cache2[2][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.394      ; 1.691      ;
; -0.701 ; cache3[1][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.386      ; 1.685      ;
; -0.700 ; cache3[2][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.295      ; 1.595      ;
; -0.697 ; cache3[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.371      ; 1.674      ;
; -0.697 ; cache3[1][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.369      ; 1.672      ;
; -0.696 ; cache3[3][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.290      ; 1.594      ;
; -0.695 ; cache3[1][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.356      ; 1.661      ;
; -0.695 ; cache2[2][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.394      ; 1.699      ;
; -0.690 ; cache1[1][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.488      ; 1.798      ;
; -0.689 ; cache2[1][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.342      ; 1.653      ;
; -0.688 ; cache0[2][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.386      ; 1.698      ;
; -0.688 ; cache1[1][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.385      ; 1.697      ;
; -0.687 ; cache2[2][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.390      ; 1.703      ;
; -0.679 ; cache2[2][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.390      ; 1.711      ;
; -0.677 ; cache1[1][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.492      ; 1.815      ;
; -0.670 ; cache2[3][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.392      ; 1.722      ;
; -0.665 ; address[0]   ; choose_data:mux_boladao|s[0] ; address[0]   ; address[0]  ; -0.500       ; 3.679      ; 2.514      ;
; -0.663 ; cache3[2][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.369      ; 1.706      ;
; -0.654 ; cache2[3][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.388      ; 1.734      ;
; -0.646 ; cache0[3][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.301      ; 1.655      ;
; -0.646 ; cache2[2][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.391      ; 1.745      ;
; -0.636 ; cache3[2][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.369      ; 1.733      ;
; -0.632 ; cache3[0][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.305      ; 1.673      ;
; -0.631 ; cache2[1][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.300      ; 1.669      ;
; -0.628 ; cache3[1][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.279      ; 1.651      ;
; -0.623 ; cache1[1][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.411      ; 1.788      ;
; -0.622 ; cache2[1][8] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.265      ; 1.643      ;
; -0.621 ; cache1[2][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.365      ; 1.744      ;
; -0.620 ; cache2[2][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.313      ; 1.693      ;
; -0.613 ; cache0[2][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.305      ; 1.692      ;
; -0.612 ; cache2[2][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.313      ; 1.701      ;
; -0.610 ; cache3[1][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.365      ; 1.755      ;
; -0.608 ; cache1[2][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.369      ; 1.761      ;
; -0.596 ; cache1[0][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.308      ; 1.712      ;
; -0.593 ; cache1[1][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.389      ; 1.796      ;
; -0.587 ; cache2[3][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.311      ; 1.724      ;
; -0.583 ; cache3[1][2] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.382      ; 1.799      ;
; -0.576 ; cache3[2][5] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.365      ; 1.789      ;
; -0.575 ; cache2[2][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.378      ; 1.803      ;
; -0.574 ; cache1[1][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.308      ; 1.734      ;
; -0.569 ; cache3[1][4] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.288      ; 1.719      ;
; -0.559 ; cache2[2][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.374      ; 1.815      ;
; -0.556 ; cache3[2][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.360      ; 1.804      ;
; -0.556 ; cache2[2][0] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.310      ; 1.754      ;
; -0.556 ; cache1[0][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.381      ; 1.825      ;
; -0.554 ; cache1[2][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.288      ; 1.734      ;
; -0.550 ; cache1[3][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.275      ; 1.725      ;
; -0.549 ; cache3[2][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.365      ; 1.816      ;
; -0.537 ; cache1[3][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.279      ; 1.742      ;
; -0.535 ; cache3[2][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.356      ; 1.821      ;
; -0.535 ; cache3[2][5] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.288      ; 1.753      ;
; -0.530 ; cache3[3][8] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.550      ; 2.020      ;
; -0.527 ; cache0[3][1] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; -0.500       ; 2.129      ; 1.102      ;
; -0.523 ; cache1[2][3] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.365      ; 1.842      ;
; -0.516 ; cache1[0][4] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.478      ; 1.962      ;
; -0.510 ; cache1[2][3] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.369      ; 1.859      ;
; -0.509 ; cache3[3][8] ; choose_data:mux_boladao|s[2] ; clock        ; address[0]  ; 0.000        ; 2.546      ; 2.037      ;
; -0.508 ; cache3[2][3] ; choose_data:mux_boladao|s[0] ; clock        ; address[0]  ; 0.000        ; 2.288      ; 1.780      ;
; -0.506 ; cache2[0][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.392      ; 1.886      ;
; -0.503 ; cache1[0][4] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.482      ; 1.979      ;
; -0.500 ; cache3[3][5] ; choose_data:mux_boladao|s[1] ; clock        ; address[0]  ; 0.000        ; 2.461      ; 1.961      ;
+--------+--------------+------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clock'                                                                                      ;
+-------+--------------+------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node    ; To Node          ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+--------------+------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; cache0[0][8] ; cache0[0][8]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache1[0][8] ; cache1[0][8]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache1[1][8] ; cache1[1][8]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache2[3][8] ; cache2[3][8]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache1[0][1] ; cache1[0][1]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache1[3][7] ; cache1[3][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache0[3][7] ; cache0[3][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache2[3][7] ; cache2[3][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache1[1][7] ; cache1[1][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache1[2][7] ; cache1[2][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache2[1][7] ; cache2[1][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache0[1][7] ; cache0[1][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache0[2][7] ; cache0[2][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache2[0][7] ; cache2[0][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache0[0][7] ; cache0[0][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache1[0][7] ; cache1[0][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache0[0][6] ; cache0[0][6]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache1[0][6] ; cache1[0][6]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; cache1[1][6] ; cache1[1][6]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.331 ; address[0]   ; cache3[0][5]     ; address[0]   ; clock       ; 0.000        ; 1.738      ; 2.221      ;
; 0.380 ; address[0]   ; cache1[3][8]     ; address[0]   ; clock       ; 0.000        ; 1.734      ; 2.266      ;
; 0.385 ; address[0]   ; cache3[2][6]     ; address[0]   ; clock       ; 0.000        ; 1.642      ; 2.179      ;
; 0.387 ; address[0]   ; cache1[3][6]     ; address[0]   ; clock       ; 0.000        ; 1.633      ; 2.172      ;
; 0.388 ; address[0]   ; cache3[3][0]     ; address[0]   ; clock       ; 0.000        ; 1.642      ; 2.182      ;
; 0.388 ; address[0]   ; cache3[3][1]     ; address[0]   ; clock       ; 0.000        ; 1.642      ; 2.182      ;
; 0.388 ; address[0]   ; cache3[3][2]     ; address[0]   ; clock       ; 0.000        ; 1.642      ; 2.182      ;
; 0.395 ; address[0]   ; cache2[2][6]     ; address[0]   ; clock       ; 0.000        ; 1.639      ; 2.186      ;
; 0.400 ; address[0]   ; cache3[3][7]     ; address[0]   ; clock       ; 0.000        ; 1.640      ; 2.192      ;
; 0.400 ; address[0]   ; cache0[2][7]     ; address[0]   ; clock       ; 0.000        ; 1.632      ; 2.184      ;
; 0.409 ; address[0]   ; cache0[2][6]     ; address[0]   ; clock       ; 0.000        ; 1.637      ; 2.198      ;
; 0.425 ; address[0]   ; cache2[3][7]     ; address[0]   ; clock       ; 0.000        ; 1.646      ; 2.223      ;
; 0.434 ; address[0]   ; cache0[1][7]     ; address[0]   ; clock       ; 0.000        ; 1.632      ; 2.218      ;
; 0.436 ; address[0]   ; cache2[1][6]     ; address[0]   ; clock       ; 0.000        ; 1.632      ; 2.220      ;
; 0.437 ; address[0]   ; cache2[3][6]     ; address[0]   ; clock       ; 0.000        ; 1.632      ; 2.221      ;
; 0.446 ; address[0]   ; cache3[0][7]     ; address[0]   ; clock       ; 0.000        ; 1.640      ; 2.238      ;
; 0.449 ; address[0]   ; cache3[1][8]     ; address[0]   ; clock       ; 0.000        ; 1.653      ; 2.254      ;
; 0.449 ; address[0]   ; cache3[2][7]     ; address[0]   ; clock       ; 0.000        ; 1.640      ; 2.241      ;
; 0.452 ; address[0]   ; cache0[3][7]     ; address[0]   ; clock       ; 0.000        ; 1.632      ; 2.236      ;
; 0.453 ; address[0]   ; cache3[1][4]     ; address[0]   ; clock       ; 0.000        ; 1.644      ; 2.249      ;
; 0.453 ; address[0]   ; cache3[1][5]     ; address[0]   ; clock       ; 0.000        ; 1.644      ; 2.249      ;
; 0.454 ; address[0]   ; cache3[2][4]     ; address[0]   ; clock       ; 0.000        ; 1.644      ; 2.250      ;
; 0.454 ; address[0]   ; cache3[2][3]     ; address[0]   ; clock       ; 0.000        ; 1.644      ; 2.250      ;
; 0.454 ; address[0]   ; cache3[2][5]     ; address[0]   ; clock       ; 0.000        ; 1.644      ; 2.250      ;
; 0.454 ; address[0]   ; cache0[1][0]     ; address[0]   ; clock       ; 0.000        ; 1.629      ; 2.235      ;
; 0.454 ; address[0]   ; cache0[1][1]     ; address[0]   ; clock       ; 0.000        ; 1.629      ; 2.235      ;
; 0.454 ; address[0]   ; cache0[1][2]     ; address[0]   ; clock       ; 0.000        ; 1.629      ; 2.235      ;
; 0.459 ; address[0]   ; cache2[1][5]     ; address[0]   ; clock       ; 0.000        ; 1.678      ; 2.289      ;
; 0.459 ; address[0]   ; cache2[1][4]     ; address[0]   ; clock       ; 0.000        ; 1.678      ; 2.289      ;
; 0.459 ; address[0]   ; cache2[1][3]     ; address[0]   ; clock       ; 0.000        ; 1.678      ; 2.289      ;
; 0.471 ; address[0]   ; cache2[2][0]     ; address[0]   ; clock       ; 0.000        ; 1.622      ; 2.245      ;
; 0.471 ; address[0]   ; cache2[2][1]     ; address[0]   ; clock       ; 0.000        ; 1.622      ; 2.245      ;
; 0.471 ; address[0]   ; cache2[2][2]     ; address[0]   ; clock       ; 0.000        ; 1.622      ; 2.245      ;
; 0.473 ; address[0]   ; out_data[7]~reg0 ; address[0]   ; clock       ; 0.000        ; 1.645      ; 2.270      ;
; 0.474 ; address[0]   ; cache2[2][5]     ; address[0]   ; clock       ; 0.000        ; 1.619      ; 2.245      ;
; 0.474 ; address[0]   ; cache2[2][4]     ; address[0]   ; clock       ; 0.000        ; 1.619      ; 2.245      ;
; 0.474 ; address[0]   ; cache2[2][3]     ; address[0]   ; clock       ; 0.000        ; 1.619      ; 2.245      ;
; 0.480 ; cache2[2][7] ; cache2[2][7]     ; clock        ; clock       ; 0.000        ; 0.000      ; 0.632      ;
; 0.490 ; address[0]   ; cache1[1][5]     ; address[0]   ; clock       ; 0.000        ; 1.521      ; 2.163      ;
; 0.490 ; address[0]   ; cache1[1][8]     ; address[0]   ; clock       ; 0.000        ; 1.548      ; 2.190      ;
; 0.490 ; address[0]   ; cache1[1][4]     ; address[0]   ; clock       ; 0.000        ; 1.521      ; 2.163      ;
; 0.490 ; address[0]   ; cache1[1][3]     ; address[0]   ; clock       ; 0.000        ; 1.521      ; 2.163      ;
; 0.491 ; address[0]   ; cache0[2][0]     ; address[0]   ; clock       ; 0.000        ; 1.627      ; 2.270      ;
; 0.491 ; address[0]   ; cache0[2][1]     ; address[0]   ; clock       ; 0.000        ; 1.627      ; 2.270      ;
; 0.491 ; address[0]   ; cache0[2][2]     ; address[0]   ; clock       ; 0.000        ; 1.627      ; 2.270      ;
; 0.498 ; address[0]   ; cache0[0][8]     ; address[0]   ; clock       ; 0.000        ; 1.548      ; 2.198      ;
; 0.500 ; address[0]   ; cache1[0][8]     ; address[0]   ; clock       ; 0.000        ; 1.548      ; 2.200      ;
; 0.501 ; address[0]   ; cache2[3][5]     ; address[0]   ; clock       ; 0.000        ; 1.621      ; 2.274      ;
; 0.501 ; address[0]   ; cache2[3][4]     ; address[0]   ; clock       ; 0.000        ; 1.621      ; 2.274      ;
; 0.501 ; address[0]   ; cache2[3][3]     ; address[0]   ; clock       ; 0.000        ; 1.621      ; 2.274      ;
; 0.509 ; address[0]   ; cache2[1][0]     ; address[0]   ; clock       ; 0.000        ; 1.632      ; 2.293      ;
; 0.509 ; address[0]   ; cache2[1][1]     ; address[0]   ; clock       ; 0.000        ; 1.632      ; 2.293      ;
; 0.509 ; address[0]   ; cache2[1][2]     ; address[0]   ; clock       ; 0.000        ; 1.632      ; 2.293      ;
; 0.509 ; address[0]   ; cache1[3][7]     ; address[0]   ; clock       ; 0.000        ; 1.645      ; 2.306      ;
; 0.509 ; address[0]   ; cache0[0][6]     ; address[0]   ; clock       ; 0.000        ; 1.637      ; 2.298      ;
; 0.511 ; address[0]   ; cache3[3][6]     ; address[0]   ; clock       ; 0.000        ; 1.645      ; 2.308      ;
; 0.516 ; address[0]   ; cache0[1][5]     ; address[0]   ; clock       ; 0.000        ; 1.567      ; 2.235      ;
; 0.516 ; address[0]   ; cache0[1][3]     ; address[0]   ; clock       ; 0.000        ; 1.567      ; 2.235      ;
; 0.516 ; address[0]   ; cache0[1][4]     ; address[0]   ; clock       ; 0.000        ; 1.567      ; 2.235      ;
; 0.521 ; address[0]   ; out_data[6]~reg0 ; address[0]   ; clock       ; 0.000        ; 1.636      ; 2.309      ;
; 0.529 ; address[0]   ; cache3[1][7]     ; address[0]   ; clock       ; 0.000        ; 1.630      ; 2.311      ;
; 0.531 ; address[0]   ; cache0[0][0]     ; address[0]   ; clock       ; 0.000        ; 1.631      ; 2.314      ;
; 0.531 ; address[0]   ; cache0[0][1]     ; address[0]   ; clock       ; 0.000        ; 1.631      ; 2.314      ;
; 0.531 ; address[0]   ; cache0[0][2]     ; address[0]   ; clock       ; 0.000        ; 1.631      ; 2.314      ;
; 0.534 ; address[0]   ; cache1[3][5]     ; address[0]   ; clock       ; 0.000        ; 1.643      ; 2.329      ;
; 0.534 ; address[0]   ; cache1[3][4]     ; address[0]   ; clock       ; 0.000        ; 1.643      ; 2.329      ;
; 0.534 ; address[0]   ; cache1[3][3]     ; address[0]   ; clock       ; 0.000        ; 1.643      ; 2.329      ;
; 0.535 ; address[0]   ; cache0[3][0]     ; address[0]   ; clock       ; 0.000        ; 1.631      ; 2.318      ;
; 0.535 ; address[0]   ; cache0[3][1]     ; address[0]   ; clock       ; 0.000        ; 1.631      ; 2.318      ;
; 0.535 ; address[0]   ; cache0[3][2]     ; address[0]   ; clock       ; 0.000        ; 1.631      ; 2.318      ;
; 0.536 ; address[0]   ; out_data[5]~reg0 ; address[0]   ; clock       ; 0.000        ; 1.630      ; 2.318      ;
; 0.538 ; address[0]   ; cache2[0][8]     ; address[0]   ; clock       ; 0.000        ; 1.724      ; 2.414      ;
; 0.540 ; address[0]   ; cache1[2][6]     ; address[0]   ; clock       ; 0.000        ; 1.636      ; 2.328      ;
; 0.541 ; address[0]   ; out_data[3]~reg0 ; address[0]   ; clock       ; 0.000        ; 1.637      ; 2.330      ;
; 0.543 ; address[0]   ; cache1[2][5]     ; address[0]   ; clock       ; 0.000        ; 1.644      ; 2.339      ;
; 0.543 ; address[0]   ; cache1[2][4]     ; address[0]   ; clock       ; 0.000        ; 1.644      ; 2.339      ;
; 0.543 ; address[0]   ; cache1[2][3]     ; address[0]   ; clock       ; 0.000        ; 1.644      ; 2.339      ;
; 0.545 ; cache1[2][6] ; out_data[6]~reg0 ; clock        ; clock       ; 0.000        ; 0.000      ; 0.697      ;
; 0.545 ; address[0]   ; cache2[2][8]     ; address[0]   ; clock       ; 0.000        ; 1.635      ; 2.332      ;
; 0.550 ; address[0]   ; cache1[0][6]     ; address[0]   ; clock       ; 0.000        ; 1.637      ; 2.339      ;
; 0.557 ; address[0]   ; cache1[0][5]     ; address[0]   ; clock       ; 0.000        ; 1.531      ; 2.240      ;
+-------+--------------+------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clock'                                                       ;
+--------+--------------+----------------+------------------+-------+------------+--------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target       ;
+--------+--------------+----------------+------------------+-------+------------+--------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clock ; Rise       ; clock        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[0][8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[0][8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[1][8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[1][8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[2][8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[2][8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache0[3][8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache0[3][8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[0][8] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[0][8] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; cache1[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; cache1[1][4] ;
+--------+--------------+----------------+------------------+-------+------------+--------------+


+--------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'address[0]'                                                                             ;
+--------+--------------+----------------+------------------+------------+------------+------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock      ; Clock Edge ; Target                             ;
+--------+--------------+----------------+------------------+------------+------------+------------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; address[0] ; Rise       ; address[0]                         ;
; 0.029  ; 0.029        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; choose_data:mux_boladao|s[0]       ;
; 0.029  ; 0.029        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; choose_data:mux_boladao|s[0]       ;
; 0.029  ; 0.029        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; choose_data:mux_boladao|s[1]       ;
; 0.029  ; 0.029        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; choose_data:mux_boladao|s[1]       ;
; 0.029  ; 0.029        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; choose_data:mux_boladao|s[2]       ;
; 0.029  ; 0.029        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; choose_data:mux_boladao|s[2]       ;
; 0.029  ; 0.029        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0clkctrl|inclk[0] ;
; 0.029  ; 0.029        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0clkctrl|inclk[0] ;
; 0.029  ; 0.029        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0clkctrl|outclk   ;
; 0.029  ; 0.029        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0clkctrl|outclk   ;
; 0.029  ; 0.029        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0|combout         ;
; 0.029  ; 0.029        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0|combout         ;
; 0.029  ; 0.029        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|s[0]|datad             ;
; 0.029  ; 0.029        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|s[0]|datad             ;
; 0.029  ; 0.029        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|s[1]|datac             ;
; 0.029  ; 0.029        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|s[1]|datac             ;
; 0.029  ; 0.029        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|s[2]|datac             ;
; 0.029  ; 0.029        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|s[2]|datac             ;
; 0.211  ; 0.211        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache0|combout                 ;
; 0.211  ; 0.211        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache0|combout                 ;
; 0.211  ; 0.211        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0|datac           ;
; 0.211  ; 0.211        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0|datac           ;
; 0.232  ; 0.232        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache1|combout                 ;
; 0.232  ; 0.232        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache1|combout                 ;
; 0.232  ; 0.232        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0|dataa           ;
; 0.232  ; 0.232        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0|dataa           ;
; 0.270  ; 0.270        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal3~0|combout                   ;
; 0.270  ; 0.270        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal3~0|combout                   ;
; 0.270  ; 0.270        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal3~0|datad                     ;
; 0.270  ; 0.270        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal3~0|datad                     ;
; 0.270  ; 0.270        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux23~1|combout                    ;
; 0.270  ; 0.270        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux23~1|combout                    ;
; 0.270  ; 0.270        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache3~0|combout               ;
; 0.270  ; 0.270        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache3~0|combout               ;
; 0.270  ; 0.270        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache3~0|datab                 ;
; 0.270  ; 0.270        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache3~0|datab                 ;
; 0.270  ; 0.270        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; mux_boladao|Mux9~0|datab           ;
; 0.270  ; 0.270        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; mux_boladao|Mux9~0|datab           ;
; 0.340  ; 0.340        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux0~1|combout                     ;
; 0.340  ; 0.340        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux0~1|combout                     ;
; 0.340  ; 0.340        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache0|datac                   ;
; 0.340  ; 0.340        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache0|datac                   ;
; 0.372  ; 0.372        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal1~0|combout                   ;
; 0.372  ; 0.372        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal1~0|combout                   ;
; 0.372  ; 0.372        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal1~0|datad                     ;
; 0.372  ; 0.372        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal1~0|datad                     ;
; 0.372  ; 0.372        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux9~1|combout                     ;
; 0.372  ; 0.372        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux9~1|combout                     ;
; 0.372  ; 0.372        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache1|datad                   ;
; 0.372  ; 0.372        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache1|datad                   ;
; 0.395  ; 0.395        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux7~1|combout                     ;
; 0.395  ; 0.395        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux7~1|combout                     ;
; 0.395  ; 0.395        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache1|datac                   ;
; 0.395  ; 0.395        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache1|datac                   ;
; 0.415  ; 0.415        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal0~0|combout                   ;
; 0.415  ; 0.415        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal0~0|combout                   ;
; 0.415  ; 0.415        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache0|datad                   ;
; 0.415  ; 0.415        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache0|datad                   ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; choose_data:mux_boladao|s[0]       ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; choose_data:mux_boladao|s[0]       ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; choose_data:mux_boladao|s[1]       ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; choose_data:mux_boladao|s[1]       ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; choose_data:mux_boladao|s[2]       ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; choose_data:mux_boladao|s[2]       ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; hit_cache2|combout                 ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; hit_cache2|combout                 ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|Mux9~0clkctrl|inclk[0] ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|Mux9~0clkctrl|inclk[0] ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|Mux9~0clkctrl|outclk   ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|Mux9~0clkctrl|outclk   ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|Mux9~0|combout         ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|Mux9~0|combout         ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|Mux9~0|datad           ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|Mux9~0|datad           ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|s[0]|datad             ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|s[0]|datad             ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|s[1]|datac             ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|s[1]|datac             ;
; 0.425  ; 0.425        ; 0.000          ; High Pulse Width ; address[0] ; Fall       ; mux_boladao|s[2]|datac             ;
; 0.425  ; 0.425        ; 0.000          ; Low Pulse Width  ; address[0] ; Fall       ; mux_boladao|s[2]|datac             ;
; 0.434  ; 0.434        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux21~1|combout                    ;
; 0.434  ; 0.434        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux21~1|combout                    ;
; 0.434  ; 0.434        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache3~0|datad                 ;
; 0.434  ; 0.434        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache3~0|datad                 ;
; 0.439  ; 0.439        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal2~0|combout                   ;
; 0.439  ; 0.439        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal2~0|combout                   ;
; 0.439  ; 0.439        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache2|datad                   ;
; 0.439  ; 0.439        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache2|datad                   ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux14~1|combout                    ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux14~1|combout                    ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; hit_cache2|datac                   ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; hit_cache2|datac                   ;
; 0.458  ; 0.458        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal0~0|datac                     ;
; 0.458  ; 0.458        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal0~0|datac                     ;
; 0.458  ; 0.458        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Equal0~0|datad                     ;
; 0.458  ; 0.458        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Equal0~0|datad                     ;
; 0.458  ; 0.458        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux2~1|combout                     ;
; 0.458  ; 0.458        ; 0.000          ; Low Pulse Width  ; address[0] ; Rise       ; Mux2~1|combout                     ;
; 0.458  ; 0.458        ; 0.000          ; High Pulse Width ; address[0] ; Rise       ; Mux3~1|combout                     ;
+--------+--------------+----------------+------------------+------------+------------+------------------------------------+


+----------------------------------------------------------------------------+
; Setup Times                                                                ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; address[*]   ; address[0] ; 2.241  ; 2.241  ; Rise       ; address[0]      ;
;  address[0]  ; address[0] ; -0.173 ; -0.173 ; Rise       ; address[0]      ;
;  address[1]  ; address[0] ; 0.498  ; 0.498  ; Rise       ; address[0]      ;
;  address[2]  ; address[0] ; 2.241  ; 2.241  ; Rise       ; address[0]      ;
;  address[3]  ; address[0] ; 2.107  ; 2.107  ; Rise       ; address[0]      ;
;  address[4]  ; address[0] ; -0.060 ; -0.060 ; Rise       ; address[0]      ;
; address[*]   ; address[0] ; 2.098  ; 2.098  ; Fall       ; address[0]      ;
;  address[0]  ; address[0] ; -0.316 ; -0.316 ; Fall       ; address[0]      ;
;  address[1]  ; address[0] ; 0.355  ; 0.355  ; Fall       ; address[0]      ;
;  address[2]  ; address[0] ; 2.098  ; 2.098  ; Fall       ; address[0]      ;
;  address[3]  ; address[0] ; 1.964  ; 1.964  ; Fall       ; address[0]      ;
;  address[4]  ; address[0] ; -0.203 ; -0.203 ; Fall       ; address[0]      ;
; address[*]   ; clock      ; 4.500  ; 4.500  ; Rise       ; clock           ;
;  address[0]  ; clock      ; 2.061  ; 2.061  ; Rise       ; clock           ;
;  address[1]  ; clock      ; 2.803  ; 2.803  ; Rise       ; clock           ;
;  address[2]  ; clock      ; 4.500  ; 4.500  ; Rise       ; clock           ;
;  address[3]  ; clock      ; 4.366  ; 4.366  ; Rise       ; clock           ;
;  address[4]  ; clock      ; 2.167  ; 2.167  ; Rise       ; clock           ;
; dataIn[*]    ; clock      ; 3.076  ; 3.076  ; Rise       ; clock           ;
;  dataIn[0]   ; clock      ; 2.116  ; 2.116  ; Rise       ; clock           ;
;  dataIn[1]   ; clock      ; 3.076  ; 3.076  ; Rise       ; clock           ;
;  dataIn[2]   ; clock      ; 2.530  ; 2.530  ; Rise       ; clock           ;
; write_enable ; clock      ; 3.423  ; 3.423  ; Rise       ; clock           ;
+--------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Hold Times                                                                 ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; address[*]   ; address[0] ; 1.528  ; 1.528  ; Rise       ; address[0]      ;
;  address[0]  ; address[0] ; 1.528  ; 1.528  ; Rise       ; address[0]      ;
;  address[1]  ; address[0] ; 1.400  ; 1.400  ; Rise       ; address[0]      ;
;  address[2]  ; address[0] ; -1.000 ; -1.000 ; Rise       ; address[0]      ;
;  address[3]  ; address[0] ; -0.918 ; -0.918 ; Rise       ; address[0]      ;
;  address[4]  ; address[0] ; 1.144  ; 1.144  ; Rise       ; address[0]      ;
; address[*]   ; address[0] ; 1.275  ; 1.275  ; Fall       ; address[0]      ;
;  address[0]  ; address[0] ; 1.275  ; 1.275  ; Fall       ; address[0]      ;
;  address[1]  ; address[0] ; 1.147  ; 1.147  ; Fall       ; address[0]      ;
;  address[2]  ; address[0] ; -1.253 ; -1.253 ; Fall       ; address[0]      ;
;  address[3]  ; address[0] ; -1.171 ; -1.171 ; Fall       ; address[0]      ;
;  address[4]  ; address[0] ; 0.891  ; 0.891  ; Fall       ; address[0]      ;
; address[*]   ; clock      ; 0.204  ; 0.204  ; Rise       ; clock           ;
;  address[0]  ; clock      ; -0.331 ; -0.331 ; Rise       ; clock           ;
;  address[1]  ; clock      ; 0.137  ; 0.137  ; Rise       ; clock           ;
;  address[2]  ; clock      ; -1.753 ; -1.753 ; Rise       ; clock           ;
;  address[3]  ; clock      ; -1.831 ; -1.831 ; Rise       ; clock           ;
;  address[4]  ; clock      ; 0.204  ; 0.204  ; Rise       ; clock           ;
; dataIn[*]    ; clock      ; -1.623 ; -1.623 ; Rise       ; clock           ;
;  dataIn[0]   ; clock      ; -1.747 ; -1.747 ; Rise       ; clock           ;
;  dataIn[1]   ; clock      ; -1.623 ; -1.623 ; Rise       ; clock           ;
;  dataIn[2]   ; clock      ; -1.815 ; -1.815 ; Rise       ; clock           ;
; write_enable ; clock      ; -1.647 ; -1.647 ; Rise       ; clock           ;
+--------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------+
; Clock to Output Times                                                    ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; hit          ; address[0] ; 4.166 ; 4.166 ; Rise       ; address[0]      ;
; hit          ; address[0] ; 4.166 ; 4.166 ; Fall       ; address[0]      ;
; hit          ; clock      ; 5.228 ; 5.228 ; Rise       ; clock           ;
; out_data[*]  ; clock      ; 3.682 ; 3.682 ; Rise       ; clock           ;
;  out_data[0] ; clock      ; 3.616 ; 3.616 ; Rise       ; clock           ;
;  out_data[1] ; clock      ; 3.650 ; 3.650 ; Rise       ; clock           ;
;  out_data[2] ; clock      ; 3.660 ; 3.660 ; Rise       ; clock           ;
;  out_data[3] ; clock      ; 3.626 ; 3.626 ; Rise       ; clock           ;
;  out_data[4] ; clock      ; 3.612 ; 3.612 ; Rise       ; clock           ;
;  out_data[5] ; clock      ; 3.629 ; 3.629 ; Rise       ; clock           ;
;  out_data[6] ; clock      ; 3.523 ; 3.523 ; Rise       ; clock           ;
;  out_data[7] ; clock      ; 3.682 ; 3.682 ; Rise       ; clock           ;
;  out_data[8] ; clock      ; 3.511 ; 3.511 ; Rise       ; clock           ;
+--------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------+
; Minimum Clock to Output Times                                            ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; hit          ; address[0] ; 3.847 ; 3.847 ; Rise       ; address[0]      ;
; hit          ; address[0] ; 3.847 ; 3.847 ; Fall       ; address[0]      ;
; hit          ; clock      ; 4.381 ; 4.381 ; Rise       ; clock           ;
; out_data[*]  ; clock      ; 3.511 ; 3.511 ; Rise       ; clock           ;
;  out_data[0] ; clock      ; 3.616 ; 3.616 ; Rise       ; clock           ;
;  out_data[1] ; clock      ; 3.650 ; 3.650 ; Rise       ; clock           ;
;  out_data[2] ; clock      ; 3.660 ; 3.660 ; Rise       ; clock           ;
;  out_data[3] ; clock      ; 3.626 ; 3.626 ; Rise       ; clock           ;
;  out_data[4] ; clock      ; 3.612 ; 3.612 ; Rise       ; clock           ;
;  out_data[5] ; clock      ; 3.629 ; 3.629 ; Rise       ; clock           ;
;  out_data[6] ; clock      ; 3.523 ; 3.523 ; Rise       ; clock           ;
;  out_data[7] ; clock      ; 3.682 ; 3.682 ; Rise       ; clock           ;
;  out_data[8] ; clock      ; 3.511 ; 3.511 ; Rise       ; clock           ;
+--------------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------------+
; Propagation Delay                                        ;
+------------+-------------+-------+-------+-------+-------+
; Input Port ; Output Port ; RR    ; RF    ; FR    ; FF    ;
+------------+-------------+-------+-------+-------+-------+
; address[1] ; hit         ; 4.908 ; 4.908 ; 4.908 ; 4.908 ;
; address[2] ; hit         ; 6.605 ; 6.605 ; 6.605 ; 6.605 ;
; address[3] ; hit         ; 6.471 ; 6.471 ; 6.471 ; 6.471 ;
; address[4] ; hit         ; 4.272 ; 4.272 ; 4.272 ; 4.272 ;
+------------+-------------+-------+-------+-------+-------+


+----------------------------------------------------------+
; Minimum Propagation Delay                                ;
+------------+-------------+-------+-------+-------+-------+
; Input Port ; Output Port ; RR    ; RF    ; FR    ; FF    ;
+------------+-------------+-------+-------+-------+-------+
; address[1] ; hit         ; 4.304 ; 4.304 ; 4.304 ; 4.304 ;
; address[2] ; hit         ; 6.195 ; 6.195 ; 6.195 ; 6.195 ;
; address[3] ; hit         ; 6.192 ; 6.192 ; 6.192 ; 6.192 ;
; address[4] ; hit         ; 4.121 ; 4.121 ; 4.121 ; 4.121 ;
+------------+-------------+-------+-------+-------+-------+


+---------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                             ;
+------------------+----------+--------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+--------+----------+---------+---------------------+
; Worst-case Slack ; -6.280   ; -2.960 ; N/A      ; N/A     ; -1.380              ;
;  address[0]      ; -1.605   ; -2.960 ; N/A      ; N/A     ; -1.222              ;
;  clock           ; -6.280   ; 0.215  ; N/A      ; N/A     ; -1.380              ;
; Design-wide TNS  ; -835.243 ; -8.147 ; 0.0      ; 0.0     ; -166.818            ;
;  address[0]      ; -4.684   ; -8.147 ; N/A      ; N/A     ; -12.438             ;
;  clock           ; -830.559 ; 0.000  ; N/A      ; N/A     ; -154.380            ;
+------------------+----------+--------+----------+---------+---------------------+


+--------------------------------------------------------------------------+
; Setup Times                                                              ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; address[*]   ; address[0] ; 4.333 ; 4.333 ; Rise       ; address[0]      ;
;  address[0]  ; address[0] ; 0.512 ; 0.512 ; Rise       ; address[0]      ;
;  address[1]  ; address[0] ; 1.837 ; 1.837 ; Rise       ; address[0]      ;
;  address[2]  ; address[0] ; 4.333 ; 4.333 ; Rise       ; address[0]      ;
;  address[3]  ; address[0] ; 4.053 ; 4.053 ; Rise       ; address[0]      ;
;  address[4]  ; address[0] ; 0.505 ; 0.505 ; Rise       ; address[0]      ;
; address[*]   ; address[0] ; 4.055 ; 4.055 ; Fall       ; address[0]      ;
;  address[0]  ; address[0] ; 0.234 ; 0.234 ; Fall       ; address[0]      ;
;  address[1]  ; address[0] ; 1.559 ; 1.559 ; Fall       ; address[0]      ;
;  address[2]  ; address[0] ; 4.055 ; 4.055 ; Fall       ; address[0]      ;
;  address[3]  ; address[0] ; 3.775 ; 3.775 ; Fall       ; address[0]      ;
;  address[4]  ; address[0] ; 0.227 ; 0.227 ; Fall       ; address[0]      ;
; address[*]   ; clock      ; 9.112 ; 9.112 ; Rise       ; clock           ;
;  address[0]  ; clock      ; 5.200 ; 5.200 ; Rise       ; clock           ;
;  address[1]  ; clock      ; 6.685 ; 6.685 ; Rise       ; clock           ;
;  address[2]  ; clock      ; 9.112 ; 9.112 ; Rise       ; clock           ;
;  address[3]  ; clock      ; 8.832 ; 8.832 ; Rise       ; clock           ;
;  address[4]  ; clock      ; 5.321 ; 5.321 ; Rise       ; clock           ;
; dataIn[*]    ; clock      ; 5.991 ; 5.991 ; Rise       ; clock           ;
;  dataIn[0]   ; clock      ; 3.894 ; 3.894 ; Rise       ; clock           ;
;  dataIn[1]   ; clock      ; 5.991 ; 5.991 ; Rise       ; clock           ;
;  dataIn[2]   ; clock      ; 4.748 ; 4.748 ; Rise       ; clock           ;
; write_enable ; clock      ; 6.518 ; 6.518 ; Rise       ; clock           ;
+--------------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------------------------------+
; Hold Times                                                                 ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; address[*]   ; address[0] ; 2.593  ; 2.593  ; Rise       ; address[0]      ;
;  address[0]  ; address[0] ; 2.560  ; 2.560  ; Rise       ; address[0]      ;
;  address[1]  ; address[0] ; 2.593  ; 2.593  ; Rise       ; address[0]      ;
;  address[2]  ; address[0] ; -1.000 ; -1.000 ; Rise       ; address[0]      ;
;  address[3]  ; address[0] ; -0.918 ; -0.918 ; Rise       ; address[0]      ;
;  address[4]  ; address[0] ; 2.034  ; 2.034  ; Rise       ; address[0]      ;
; address[*]   ; address[0] ; 2.088  ; 2.088  ; Fall       ; address[0]      ;
;  address[0]  ; address[0] ; 2.055  ; 2.055  ; Fall       ; address[0]      ;
;  address[1]  ; address[0] ; 2.088  ; 2.088  ; Fall       ; address[0]      ;
;  address[2]  ; address[0] ; -1.253 ; -1.253 ; Fall       ; address[0]      ;
;  address[3]  ; address[0] ; -1.171 ; -1.171 ; Fall       ; address[0]      ;
;  address[4]  ; address[0] ; 1.529  ; 1.529  ; Fall       ; address[0]      ;
; address[*]   ; clock      ; 0.391  ; 0.391  ; Rise       ; clock           ;
;  address[0]  ; clock      ; -0.331 ; -0.331 ; Rise       ; clock           ;
;  address[1]  ; clock      ; 0.137  ; 0.137  ; Rise       ; clock           ;
;  address[2]  ; clock      ; -1.753 ; -1.753 ; Rise       ; clock           ;
;  address[3]  ; clock      ; -1.831 ; -1.831 ; Rise       ; clock           ;
;  address[4]  ; clock      ; 0.391  ; 0.391  ; Rise       ; clock           ;
; dataIn[*]    ; clock      ; -1.623 ; -1.623 ; Rise       ; clock           ;
;  dataIn[0]   ; clock      ; -1.747 ; -1.747 ; Rise       ; clock           ;
;  dataIn[1]   ; clock      ; -1.623 ; -1.623 ; Rise       ; clock           ;
;  dataIn[2]   ; clock      ; -1.815 ; -1.815 ; Rise       ; clock           ;
; write_enable ; clock      ; -1.647 ; -1.647 ; Rise       ; clock           ;
+--------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; hit          ; address[0] ; 8.468  ; 8.468  ; Rise       ; address[0]      ;
; hit          ; address[0] ; 8.468  ; 8.468  ; Fall       ; address[0]      ;
; hit          ; clock      ; 10.548 ; 10.548 ; Rise       ; clock           ;
; out_data[*]  ; clock      ; 6.523  ; 6.523  ; Rise       ; clock           ;
;  out_data[0] ; clock      ; 6.445  ; 6.445  ; Rise       ; clock           ;
;  out_data[1] ; clock      ; 6.487  ; 6.487  ; Rise       ; clock           ;
;  out_data[2] ; clock      ; 6.503  ; 6.503  ; Rise       ; clock           ;
;  out_data[3] ; clock      ; 6.452  ; 6.452  ; Rise       ; clock           ;
;  out_data[4] ; clock      ; 6.438  ; 6.438  ; Rise       ; clock           ;
;  out_data[5] ; clock      ; 6.454  ; 6.454  ; Rise       ; clock           ;
;  out_data[6] ; clock      ; 6.248  ; 6.248  ; Rise       ; clock           ;
;  out_data[7] ; clock      ; 6.523  ; 6.523  ; Rise       ; clock           ;
;  out_data[8] ; clock      ; 6.225  ; 6.225  ; Rise       ; clock           ;
+--------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------+
; Minimum Clock to Output Times                                            ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; hit          ; address[0] ; 3.847 ; 3.847 ; Rise       ; address[0]      ;
; hit          ; address[0] ; 3.847 ; 3.847 ; Fall       ; address[0]      ;
; hit          ; clock      ; 4.381 ; 4.381 ; Rise       ; clock           ;
; out_data[*]  ; clock      ; 3.511 ; 3.511 ; Rise       ; clock           ;
;  out_data[0] ; clock      ; 3.616 ; 3.616 ; Rise       ; clock           ;
;  out_data[1] ; clock      ; 3.650 ; 3.650 ; Rise       ; clock           ;
;  out_data[2] ; clock      ; 3.660 ; 3.660 ; Rise       ; clock           ;
;  out_data[3] ; clock      ; 3.626 ; 3.626 ; Rise       ; clock           ;
;  out_data[4] ; clock      ; 3.612 ; 3.612 ; Rise       ; clock           ;
;  out_data[5] ; clock      ; 3.629 ; 3.629 ; Rise       ; clock           ;
;  out_data[6] ; clock      ; 3.523 ; 3.523 ; Rise       ; clock           ;
;  out_data[7] ; clock      ; 3.682 ; 3.682 ; Rise       ; clock           ;
;  out_data[8] ; clock      ; 3.511 ; 3.511 ; Rise       ; clock           ;
+--------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------+
; Progagation Delay                                            ;
+------------+-------------+--------+--------+--------+--------+
; Input Port ; Output Port ; RR     ; RF     ; FR     ; FF     ;
+------------+-------------+--------+--------+--------+--------+
; address[1] ; hit         ; 9.953  ; 9.953  ; 9.953  ; 9.953  ;
; address[2] ; hit         ; 12.380 ; 12.380 ; 12.380 ; 12.380 ;
; address[3] ; hit         ; 12.100 ; 12.100 ; 12.100 ; 12.100 ;
; address[4] ; hit         ; 8.384  ; 8.384  ; 8.384  ; 8.384  ;
+------------+-------------+--------+--------+--------+--------+


+----------------------------------------------------------+
; Minimum Progagation Delay                                ;
+------------+-------------+-------+-------+-------+-------+
; Input Port ; Output Port ; RR    ; RF    ; FR    ; FF    ;
+------------+-------------+-------+-------+-------+-------+
; address[1] ; hit         ; 4.304 ; 4.304 ; 4.304 ; 4.304 ;
; address[2] ; hit         ; 6.195 ; 6.195 ; 6.195 ; 6.195 ;
; address[3] ; hit         ; 6.192 ; 6.192 ; 6.192 ; 6.192 ;
; address[4] ; hit         ; 4.121 ; 4.121 ; 4.121 ; 4.121 ;
+------------+-------------+-------+-------+-------+-------+


+---------------------------------------------------------------------+
; Setup Transfers                                                     ;
+------------+------------+----------+----------+----------+----------+
; From Clock ; To Clock   ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+------------+----------+----------+----------+----------+
; address[0] ; address[0] ; 312      ; 312      ; 312      ; 312      ;
; clock      ; address[0] ; 832      ; 0        ; 832      ; 0        ;
; address[0] ; clock      ; 8255     ; 8255     ; 0        ; 0        ;
; clock      ; clock      ; 19992    ; 0        ; 0        ; 0        ;
+------------+------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------+
; Hold Transfers                                                      ;
+------------+------------+----------+----------+----------+----------+
; From Clock ; To Clock   ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+------------+----------+----------+----------+----------+
; address[0] ; address[0] ; 312      ; 312      ; 312      ; 312      ;
; clock      ; address[0] ; 832      ; 0        ; 832      ; 0        ;
; address[0] ; clock      ; 8255     ; 8255     ; 0        ; 0        ;
; clock      ; clock      ; 19992    ; 0        ; 0        ; 0        ;
+------------+------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 9     ; 9    ;
; Unconstrained Input Port Paths  ; 830   ; 830  ;
; Unconstrained Output Ports      ; 10    ; 10   ;
; Unconstrained Output Port Paths ; 78    ; 78   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Thu Feb 11 16:21:37 2021
Info: Command: quartus_sta parte3 -c parte3
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 3 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'parte3.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clock clock
    Info (332105): create_clock -period 1.000 -name address[0] address[0]
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Equal0~0  from: datac  to: combout
    Info (332098): Cell: Equal0~0  from: datad  to: combout
    Info (332098): Cell: Equal1~0  from: datac  to: combout
    Info (332098): Cell: Equal1~0  from: datad  to: combout
    Info (332098): Cell: Equal2~0  from: datac  to: combout
    Info (332098): Cell: Equal2~0  from: datad  to: combout
    Info (332098): Cell: Equal3~0  from: datac  to: combout
    Info (332098): Cell: Equal3~0  from: datad  to: combout
    Info (332098): Cell: Mux0~0  from: dataa  to: combout
    Info (332098): Cell: Mux0~1  from: dataa  to: combout
    Info (332098): Cell: Mux0~1  from: datad  to: combout
    Info (332098): Cell: Mux10~0  from: datad  to: combout
    Info (332098): Cell: Mux10~1  from: datad  to: combout
    Info (332098): Cell: Mux14~0  from: datad  to: combout
    Info (332098): Cell: Mux14~1  from: datab  to: combout
    Info (332098): Cell: Mux14~1  from: datad  to: combout
    Info (332098): Cell: Mux15~0  from: datad  to: combout
    Info (332098): Cell: Mux15~1  from: datad  to: combout
    Info (332098): Cell: Mux16~0  from: datad  to: combout
    Info (332098): Cell: Mux16~1  from: dataa  to: combout
    Info (332098): Cell: Mux16~1  from: datad  to: combout
    Info (332098): Cell: Mux17~0  from: datad  to: combout
    Info (332098): Cell: Mux17~1  from: datad  to: combout
    Info (332098): Cell: Mux1~0  from: datad  to: combout
    Info (332098): Cell: Mux1~1  from: dataa  to: combout
    Info (332098): Cell: Mux1~1  from: datad  to: combout
    Info (332098): Cell: Mux21~0  from: datad  to: combout
    Info (332098): Cell: Mux21~1  from: dataa  to: combout
    Info (332098): Cell: Mux21~1  from: datad  to: combout
    Info (332098): Cell: Mux22~0  from: datab  to: combout
    Info (332098): Cell: Mux22~1  from: datab  to: combout
    Info (332098): Cell: Mux23~0  from: datab  to: combout
    Info (332098): Cell: Mux23~1  from: dataa  to: combout
    Info (332098): Cell: Mux23~1  from: datad  to: combout
    Info (332098): Cell: Mux24~0  from: datad  to: combout
    Info (332098): Cell: Mux24~1  from: datad  to: combout
    Info (332098): Cell: Mux2~0  from: datad  to: combout
    Info (332098): Cell: Mux2~1  from: dataa  to: combout
    Info (332098): Cell: Mux2~1  from: datad  to: combout
    Info (332098): Cell: Mux3~0  from: datad  to: combout
    Info (332098): Cell: Mux3~1  from: datab  to: combout
    Info (332098): Cell: Mux3~1  from: datad  to: combout
    Info (332098): Cell: Mux7~0  from: datab  to: combout
    Info (332098): Cell: Mux7~1  from: dataa  to: combout
    Info (332098): Cell: Mux7~1  from: datad  to: combout
    Info (332098): Cell: Mux8~0  from: datad  to: combout
    Info (332098): Cell: Mux8~1  from: datad  to: combout
    Info (332098): Cell: Mux9~0  from: datab  to: combout
    Info (332098): Cell: Mux9~1  from: dataa  to: combout
    Info (332098): Cell: Mux9~1  from: datad  to: combout
    Info (332098): Cell: hit_cache0  from: datab  to: combout
    Info (332098): Cell: hit_cache1  from: datab  to: combout
    Info (332098): Cell: hit_cache2  from: dataa  to: combout
    Info (332098): Cell: hit_cache3~0  from: dataa  to: combout
    Info (332098): Cell: mux_boladao|Mux9~0  from: dataa  to: combout
    Info (332098): Cell: mux_boladao|Mux9~0  from: datab  to: combout
    Info (332098): Cell: mux_boladao|Mux9~0  from: datac  to: combout
    Info (332098): Cell: mux_boladao|Mux9~0  from: datad  to: combout
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -6.280
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -6.280      -830.559 clock 
    Info (332119):    -1.605        -4.684 address[0] 
Info (332146): Worst-case hold slack is -2.960
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.960        -8.147 address[0] 
    Info (332119):     0.391         0.000 clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380      -154.380 clock 
    Info (332119):    -1.222       -12.438 address[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Equal0~0  from: datac  to: combout
    Info (332098): Cell: Equal0~0  from: datad  to: combout
    Info (332098): Cell: Equal1~0  from: datac  to: combout
    Info (332098): Cell: Equal1~0  from: datad  to: combout
    Info (332098): Cell: Equal2~0  from: datac  to: combout
    Info (332098): Cell: Equal2~0  from: datad  to: combout
    Info (332098): Cell: Equal3~0  from: datac  to: combout
    Info (332098): Cell: Equal3~0  from: datad  to: combout
    Info (332098): Cell: Mux0~0  from: dataa  to: combout
    Info (332098): Cell: Mux0~1  from: dataa  to: combout
    Info (332098): Cell: Mux0~1  from: datad  to: combout
    Info (332098): Cell: Mux10~0  from: datad  to: combout
    Info (332098): Cell: Mux10~1  from: datad  to: combout
    Info (332098): Cell: Mux14~0  from: datad  to: combout
    Info (332098): Cell: Mux14~1  from: datab  to: combout
    Info (332098): Cell: Mux14~1  from: datad  to: combout
    Info (332098): Cell: Mux15~0  from: datad  to: combout
    Info (332098): Cell: Mux15~1  from: datad  to: combout
    Info (332098): Cell: Mux16~0  from: datad  to: combout
    Info (332098): Cell: Mux16~1  from: dataa  to: combout
    Info (332098): Cell: Mux16~1  from: datad  to: combout
    Info (332098): Cell: Mux17~0  from: datad  to: combout
    Info (332098): Cell: Mux17~1  from: datad  to: combout
    Info (332098): Cell: Mux1~0  from: datad  to: combout
    Info (332098): Cell: Mux1~1  from: dataa  to: combout
    Info (332098): Cell: Mux1~1  from: datad  to: combout
    Info (332098): Cell: Mux21~0  from: datad  to: combout
    Info (332098): Cell: Mux21~1  from: dataa  to: combout
    Info (332098): Cell: Mux21~1  from: datad  to: combout
    Info (332098): Cell: Mux22~0  from: datab  to: combout
    Info (332098): Cell: Mux22~1  from: datab  to: combout
    Info (332098): Cell: Mux23~0  from: datab  to: combout
    Info (332098): Cell: Mux23~1  from: dataa  to: combout
    Info (332098): Cell: Mux23~1  from: datad  to: combout
    Info (332098): Cell: Mux24~0  from: datad  to: combout
    Info (332098): Cell: Mux24~1  from: datad  to: combout
    Info (332098): Cell: Mux2~0  from: datad  to: combout
    Info (332098): Cell: Mux2~1  from: dataa  to: combout
    Info (332098): Cell: Mux2~1  from: datad  to: combout
    Info (332098): Cell: Mux3~0  from: datad  to: combout
    Info (332098): Cell: Mux3~1  from: datab  to: combout
    Info (332098): Cell: Mux3~1  from: datad  to: combout
    Info (332098): Cell: Mux7~0  from: datab  to: combout
    Info (332098): Cell: Mux7~1  from: dataa  to: combout
    Info (332098): Cell: Mux7~1  from: datad  to: combout
    Info (332098): Cell: Mux8~0  from: datad  to: combout
    Info (332098): Cell: Mux8~1  from: datad  to: combout
    Info (332098): Cell: Mux9~0  from: datab  to: combout
    Info (332098): Cell: Mux9~1  from: dataa  to: combout
    Info (332098): Cell: Mux9~1  from: datad  to: combout
    Info (332098): Cell: hit_cache0  from: datab  to: combout
    Info (332098): Cell: hit_cache1  from: datab  to: combout
    Info (332098): Cell: hit_cache2  from: dataa  to: combout
    Info (332098): Cell: hit_cache3~0  from: dataa  to: combout
    Info (332098): Cell: mux_boladao|Mux9~0  from: dataa  to: combout
    Info (332098): Cell: mux_boladao|Mux9~0  from: datab  to: combout
    Info (332098): Cell: mux_boladao|Mux9~0  from: datac  to: combout
    Info (332098): Cell: mux_boladao|Mux9~0  from: datad  to: combout
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.123
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.123      -273.542 clock 
    Info (332119):    -0.206        -0.544 address[0] 
Info (332146): Worst-case hold slack is -1.528
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.528        -4.431 address[0] 
    Info (332119):     0.215         0.000 clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380      -154.380 clock 
    Info (332119):    -1.222        -1.222 address[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 4553 megabytes
    Info: Processing ended: Thu Feb 11 16:21:41 2021
    Info: Elapsed time: 00:00:04
    Info: Total CPU time (on all processors): 00:00:03


